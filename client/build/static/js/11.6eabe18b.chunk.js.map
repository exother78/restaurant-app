{"version":3,"sources":["reducer.js","Components/Screens/Global/OrderTotal.jsx","Components/Screens/Checkout/Paypal/Paypal.jsx","Components/Screens/Checkout/Pay.jsx"],"names":["getBasketTotal","basket","reduce","amount","item","price","quantity","OrderTotal","navigate","useNavigate","state","useStateValue","setBasket","useState","error","setError","setTimeout","className","length","style","color","fontSize","map","i","title","parseFloat","toFixed","onClick","to","Paypal","onSuccess","onCancel","onError","total","loading","deferLoading","options","locale","intent","currency","fundingSource","FUNDING","PAYPAL","onApprove","createOrder","data","actions","console","log","order","create","purchase_units","value","layout","label","height","Pay","userAPI","token","email","lastName","name","phone","userID","postalCode","address","building","checkPhone","checkEmail","checkName","setDeferLoading","transactionSuccess","e","a","preventDefault","time","Date","now","axios","post","orders","orderNumber","paymentID","orderID","headers","Authorization","then","response","transactionError","transactionCancel","useEffect","Footer"],"mappings":"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","file":"static/js/11.6eabe18b.chunk.js","sourcesContent":["export const getBasketTotal = (basket) => {\r\n  return basket?.reduce(\r\n    (amount, item) => item.price * item.quantity + amount,\r\n    0\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./OrderTotal.css\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport ShoppingBasketRoundedIcon from \"@mui/icons-material/ShoppingBasketRounded\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst OrderTotal = () => {\r\n  const navigate = useNavigate();\r\n  const state = useStateValue();\r\n  const [basket, setBasket] = state.basket;\r\n  const [error, setError] = useState(null);\r\n\r\n  const emptyBasket = () => {\r\n    setBasket([]);\r\n  };\r\n\r\n  const checkoutClick = () => {\r\n    if (basket.length > 0) {\r\n      navigate(\"/checkout\");\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"order__right-section\">\r\n      <div className=\"order__right-section-content\">\r\n        <h2 className=\"orderTotal__title\">\r\n          {basket?.length} items in Cart\r\n          <ShoppingBasketRoundedIcon\r\n            style={{ color: \"#d70f64\", fontSize: \"xx-large\" }}\r\n          />\r\n        </h2>\r\n        {basket?.map((item, i) => (\r\n          <div key={i} className=\"order__total-list\">\r\n            <p className=\"order__total-title\">{item?.title}</p>\r\n            <p className=\"order__total-price\">\r\n              <span className=\"order__total-list-text\">x{item?.quantity}</span>\r\n              {item?.price}\r\n            </p>\r\n          </div>\r\n        ))}\r\n        <h3 className=\"order__total\">\r\n          <span> total </span>\r\n          {parseFloat(getBasketTotal(basket)).toFixed(2)}\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"order__total-btns\">\r\n        <button className=\"order__total-empty-button\" onClick={emptyBasket}>\r\n          Empty Cart\r\n        </button>\r\n        <Link\r\n          to={basket.length > 0 ? \"/checkout\" : \"/order\"}\r\n          className=\"order__total-checkout-button-link\">\r\n          <button\r\n            className=\"order__total-checkout-button\"\r\n            onClick={checkoutClick}>\r\n            Checkout\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderTotal;\r\n","import React from \"react\";\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons,\r\n  FUNDING,\r\n} from \"@paypal/react-paypal-js\";\r\n// import Loading from \"../../Global/Loading\";\r\n\r\n// const initialOptions = {\r\n//   \"client-id\":\r\n//     \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n//   \"merchant-id\": \"UGUFDKZNBH2TN\",\r\n//   \"buyer-country\": \"DE\",\r\n//   currency: \"EURO\",\r\n//   locale: \"de_DE\",\r\n// };\r\n\r\nconst Paypal = ({ onSuccess, onCancel, onError, total, loading, setError }) => {\r\n  // const [{ isPending, isResolved }] = usePayPalScriptReducer();\r\n  return (\r\n    <PayPalScriptProvider\r\n      deferLoading={loading}\r\n      options={{\r\n        \"client-id\":\r\n          \"ATSNzle97H2HdLUL3GMnS5I8PuKouWyteOOCVNR-3UqTW5N_0tFs3ddtDitE1IfqAlRXI4hbaEo2yDT9\",\r\n        // \"client-id\":\r\n        //   \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n        \"merchant-id\": \"92V8XPRZFHZRE\",\r\n        // // \"buyer-country\": \"IT\",\r\n        // // locale: \"de_DE\",\r\n        // locale: \"en_US\",\r\n        locale: \"it_IT\",\r\n        intent: \"capture\",\r\n        currency: \"EUR\",\r\n      }}>\r\n      <PayPalButtons\r\n        fundingSource={FUNDING.PAYPAL}\r\n        // style={{ layout: \"horizontal\" }}\r\n        // createBillingAgreement={(data) =>\r\n        //   console.log(\"create Billing agreement: \", data)\r\n        // }\r\n        // onApprove={(data) => console.log(\"onApprove: \", data)}\r\n        onApprove={onSuccess}\r\n        onError={onError}\r\n        onCancel={onCancel}\r\n        // onError={(err) => console.log(\"error occured: \", err)}\r\n        // onInit={(data) => console.log(\"on init: \", data)}\r\n        createOrder={(data, actions) => {\r\n          console.log(\"data: \", data);\r\n          if (total !== 0)\r\n            return actions.order.create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    value: total,\r\n                  },\r\n                },\r\n              ],\r\n            });\r\n        }}\r\n        style={{\r\n          layout: \"horizontal\",\r\n          label: \"checkout\",\r\n          height: 40,\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default Paypal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Pay.css\";\r\nimport OrderTotal from \"./../Global/OrderTotal\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport Paypal from \"./Paypal/Paypal\";\r\nimport axios from \"axios\";\r\nimport Footer from \"../Home/Sections/Footer\";\r\n\r\nconst Pay = () => {\r\n  const state = useStateValue();\r\n  const { userAPI, token } = useStateValue();\r\n  const { email, lastName, name, phone } = userAPI;\r\n  const { userID } = userAPI;\r\n  const [basket, setBasket] = state?.basket;\r\n  const [postalCode] = userAPI?.postalCode;\r\n  const [address] = userAPI?.address;\r\n  const [building] = userAPI?.building;\r\n  const [checkPhone] = userAPI?.checkPhone;\r\n  const [checkEmail] = userAPI?.checkEmail;\r\n  const [checkName] = userAPI?.checkName;\r\n  const [error, setError] = useState(\"\");\r\n  const [deferLoading, setDeferLoading] = useState(true);\r\n\r\n  const transactionSuccess = async (data, e) => {\r\n    e.preventDefault();\r\n    const time = Date.now();\r\n\r\n    if (postalCode && address && basket.length > 0) {\r\n      try {\r\n        await axios\r\n          .post(\r\n            \"/api/user/createorder\",\r\n            {\r\n              orders: {\r\n                orderNumber: time + 1983,\r\n                userID,\r\n                postalCode,\r\n                address,\r\n                paymentID: data.orderID,\r\n                building,\r\n                basket,\r\n                name: name ? name : checkName,\r\n                email: email ? email : checkEmail,\r\n                lastName,\r\n                phone: phone ? phone : checkPhone,\r\n                time,\r\n                total: getBasketTotal(basket),\r\n              },\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token[0]}`,\r\n              },\r\n            }\r\n          )\r\n          .then(() => {\r\n            setBasket([]);\r\n            // window.location.href = \"/\";\r\n          });\r\n      } catch (error) {\r\n        setError(error.response.data.error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const transactionError = async () => {\r\n    setError(\"Transaction not successful\");\r\n  };\r\n\r\n  const transactionCancel = async (data) => {\r\n    setError(\"Cancelled Transaction\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!postalCode || !address || !building || basket.length === 0) {\r\n      setDeferLoading(true);\r\n    }\r\n    if (postalCode && address && building && basket.length > 0) {\r\n      setDeferLoading(false);\r\n    }\r\n    if (basket?.length === 0) setError(\"No items in the cart\");\r\n  }, [building, userID, postalCode, basket, address, deferLoading]);\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"paymentOptions\">\r\n        {error && <div className=\"error__box\">{error}</div>}\r\n        <OrderTotal />\r\n\r\n        <div className=\"paymentOptions-Paypal-btn\">\r\n          {/* <button\r\n          onClick={(e) => transactionSuccess({ orderID: \"something now\" }, e)}\r\n          style={{ padding: \"10px 15px\", margin: \"10px\" }}>\r\n          Pay the bill\r\n        </button> */}\r\n          <Paypal\r\n            total={parseFloat(getBasketTotal(basket)).toFixed(2)}\r\n            onSuccess={transactionSuccess}\r\n            onCancel={transactionCancel}\r\n            onError={transactionError}\r\n            setError={setError}\r\n            loading={deferLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pay;\r\n"],"sourceRoot":""}