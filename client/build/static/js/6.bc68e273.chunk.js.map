{"version":3,"sources":["Components/Screens/Cart/Sections/CartProduct.jsx","Components/Screens/Checkout/Paypal/Paypal.jsx","Components/Screens/Checkout/Checkout.jsx"],"names":["CartProduct","id","title","description","price","image","quantity","removeID","state","useStateValue","basket","setBasket","className","src","alt","substring","onClick","s","findIndex","item","newArray","splice","Paypal","props","options","onApprove","data","console","log","onError","err","onInit","createOrder","actions","order","create","purchase_units","amount","value","onCancel","e","style","layout","label","height","Checkout","userAPI","postalCode","setPostalCode","userID","email","lastName","name","useState","address","setAddress","street","setStreet","error","setError","transactionSuccess","a","time","Date","length","axios","patch","orders","then","window","location","href","response","transactionError","transactionCancel","setTimeout","htmlFor","type","placeholder","onChange","target","localStorage","setItem","flexWrap","map","i","key","width","marginTop","marginLeft","getBasketTotal","total","onSucccess"],"mappings":"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","file":"static/js/6.bc68e273.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CartProduct.css\";\r\nimport { useStateValue } from \"../../../../StateProvider\";\r\n\r\nconst CartProduct = ({\r\n  id,\r\n  title,\r\n  description,\r\n  price,\r\n  image,\r\n  removeID,\r\n  quantity,\r\n}) => {\r\n  const state = useStateValue();\r\n  const [basket, setBasket] = state.basket;\r\n\r\n  const handleAdd = () => {\r\n    const s = basket.findIndex((item) => item.id === id);\r\n\r\n    if (s !== -1) {\r\n      let newArray = [...basket];\r\n      newArray[s] = { ...newArray[s], quantity: newArray[s].quantity + 1 };\r\n      setBasket(newArray);\r\n    }\r\n    if (s === -1) return;\r\n  };\r\n\r\n  const handleSubtract = () => {\r\n    const s = basket.findIndex((item) => item.id === id);\r\n\r\n    if (s !== -1) {\r\n      if (basket[s].quantity > 1) {\r\n        let newArray = [...basket];\r\n        newArray[s] = { ...newArray[s], quantity: newArray[s].quantity - 1 };\r\n        setBasket(newArray);\r\n      }\r\n      if (basket[s].quantity === 1) {\r\n        let newArray = [...basket];\r\n        newArray.splice(s, 1);\r\n        setBasket(newArray);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart__product\">\r\n      <div className=\"cart__product-container\">\r\n        <div className=\"cart__product-image-container\">\r\n          <img src={image} alt=\"\" className=\"cart__product-image\" />\r\n        </div>\r\n        <div className=\"cart__product-text-section\">\r\n          <h3 className=\"cart__product-title\">{title}</h3>\r\n          <p className=\"cartProduct__description\">\r\n            {description.substring(0, 60)}\r\n          </p>\r\n          <p className=\"cart__product-price\">â‚¬ {price}</p>\r\n        </div>\r\n        <div className=\"cart__product-price-incre\">\r\n          <button\r\n            className=\"cartProduct__minus cartProduct__same\"\r\n            onClick={handleSubtract}>\r\n            -\r\n          </button>\r\n          <span className=\"cartProduct__quantity cartProduct__same\">\r\n            {quantity}\r\n          </span>\r\n          <button\r\n            className=\"cartProduct__plus cartProduct__same\"\r\n            onClick={handleAdd}>\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartProduct;\r\n","import React from \"react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst Paypal = (props) => {\r\n  return (\r\n    <PayPalScriptProvider options={{ \"client-id\": \"test\" }}>\r\n      <PayPalButtons\r\n        // fundingSource={FUNDING.PAYPAL}\r\n        // style={{ layout: \"horizontal\" }}\r\n        // createBillingAgreement={(data) =>\r\n        //   console.log(\"create Billing agreement: \", data)\r\n        // }\r\n        onApprove={(data) => console.log(\"onApprove: \", data)}\r\n        onError={(err) => console.log(\"error occured: \", err)}\r\n        onInit={(data) => console.log(\"on init: \", data)}\r\n        createOrder={(data, actions) => {\r\n          console.log(\"data: \", data);\r\n          console.log(\"actions: \", actions);\r\n          return actions.order.create({\r\n            purchase_units: [\r\n              {\r\n                amount: {\r\n                  value: \"2.00\",\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        }}\r\n        onCancel={(e) => console.log(\"cancelled payment: \", e)}\r\n        // disabled\r\n        style={{\r\n          layout: \"horizontal\",\r\n          label: \"checkout\",\r\n          height: 40,\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default Paypal;\r\n// import React from \"react\";\r\n// import PaypalExpressBtn from \"react-paypal-express-checkout\";\r\n\r\n// const Paypal = (props) => {\r\n//   const nodeRef = React.useRef(null);\r\n//   let env = \"sandbox\"; // you can set here to 'production' for production\r\n//   let currency = \"USD\"; // or you can set this value from your props or state\r\n//   let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n//   // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n//   const client = {\r\n//     sandbox:\r\n//       \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n//     production: \"YOUR-PRODUCTION-APP-ID\",\r\n//   };\r\n\r\n//   const onSuccess = (payment) => {\r\n//     // Congratulation, it came here means everything's fine!\r\n//     console.log(\"The payment was succeeded!\", payment);\r\n//     // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n//     console.log(\"this is total amount: \", props.total);\r\n//     // if (props.total === undefined) {\r\n//     //   console.log(\"Empty: \", props.total);\r\n//     // } else if (props.total !== undefined && props.total !== null) {\r\n//     // }\r\n//   };\r\n\r\n//   const onError = (data) => {\r\n//     // User pressed \"cancel\" or close Paypal's popup!\r\n//     console.log(\"The payment was cancelled!\", data);\r\n//     // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n//   };\r\n\r\n//   const onCancel = (err) => {\r\n//     // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n//     console.log(\"Error!\", err);\r\n//     // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n//     // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n//   };\r\n\r\n//   const styles = {\r\n//     size: \"medium\",\r\n//     color: \"blue\",\r\n//     shape: \"rect\",\r\n//     label: \"checkout\",\r\n//   };\r\n//   return (\r\n//     <PaypalExpressBtn\r\n//       env={env}\r\n//       nodeRef={nodeRef}\r\n//       client={client}\r\n//       currency={currency}\r\n//       total={total}\r\n//       onError={onError}\r\n//       onSuccess={onSuccess}\r\n//       onCancel={onCancel}\r\n//       style={styles}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default Paypal;\r\n\r\n// // export default class Paypal extends React.Component {\r\n// //   render() {\r\n// // const onSuccess = (payment) => {\r\n// //   // Congratulation, it came here means everything's fine!\r\n// //   console.log(\"The payment was succeeded!\", payment);\r\n// //   // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n// //   console.log(\"total amount: \", this.props.total);\r\n// // };\r\n\r\n// //     const onCancel = (data) => {\r\n// //       // User pressed \"cancel\" or close Paypal's popup!\r\n// //       console.log(\"The payment was cancelled!\", data);\r\n// //       // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n// //     };\r\n\r\n// //     const onError = (err) => {\r\n// //       // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n// //       console.log(\"Error!\", err);\r\n// //       // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n// //       // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n// //     };\r\n\r\n// //     let env = \"sandbox\"; // you can set here to 'production' for production\r\n// //     let currency = \"USD\"; // or you can set this value from your props or state\r\n// //     let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n// //     // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n// //     const client = {\r\n// //       sandbox:\r\n// //         \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n// //       production: \"YOUR-PRODUCTION-APP-ID\",\r\n// //     };\r\n// //     // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n// //     // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n// //     //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n// //     // For production app-ID:\r\n// //     //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n// //     // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n\r\n// //     const styles = {\r\n// //       size: \"medium\",\r\n// //       color: \"blue\",\r\n// //       shape: \"rect\",\r\n// //       label: \"checkout\",\r\n// //     };\r\n// //     return (\r\n// //       <PaypalExpressBtn\r\n// //         env={env}\r\n// //         client={client}\r\n// //         currency={currency}\r\n// //         total={total}\r\n// //         onError={onError}\r\n// //         onSuccess={onSuccess}\r\n// //         onCancel={onCancel}\r\n// //         style={styles}\r\n// //       />\r\n// //     );\r\n// //   }\r\n// // }\r\n","import React, { useState } from \"react\";\r\nimport \"./Checkout.css\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport CartProduct from \"../Cart/Sections/CartProduct\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport axios from \"axios\";\r\nimport Paypal from \"./Paypal/Paypal\";\r\n\r\nconst Checkout = () => {\r\n  const state = useStateValue();\r\n  const { userAPI } = useStateValue();\r\n  const [postalCode, setPostalCode] = userAPI.postalCode;\r\n  const { userID, email, lastName, name } = userAPI;\r\n  const [basket, setBasket] = state.basket;\r\n  const [address, setAddress] = useState(\"Gujranwala\");\r\n  const [street, setStreet] = useState(\"6\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const transactionSuccess = async (data) => {\r\n    try {\r\n      const time = new Date();\r\n      if (userID) {\r\n        if (postalCode) {\r\n          if (basket.length > 0) {\r\n            console.log(\"transaction Success: \", data);\r\n            await axios\r\n              .patch(`/api/user/updateorders/${userID}`, {\r\n                orders: {\r\n                  postalCode,\r\n                  address,\r\n                  email,\r\n                  name,\r\n                  lastName,\r\n                  time,\r\n                  userID,\r\n                  basket,\r\n                },\r\n              })\r\n              .then(() => {\r\n                setBasket([]);\r\n                window.location.href = \"/\";\r\n              });\r\n          }\r\n        }\r\n      }\r\n      if (!postalCode) {\r\n        setError(\"Please enter your postal code first\");\r\n      }\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const transactionError = async (data) => {\r\n    console.log(\"Error Transaction: \", data);\r\n  };\r\n\r\n  const transactionCancel = async (data) => {\r\n    console.log(\"cancelled: \", data);\r\n  };\r\n\r\n  const postalCodeChange = (e) => {\r\n    setPostalCode(e.target.value);\r\n    localStorage.setItem(\"pcl\", e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkout\">\r\n      {error && <div className=\"error__box\">{error}</div>}\r\n\r\n      <div className=\"checkout__categories\">\r\n        <div className=\"checkout__category\">\r\n          <div className=\"checkout__category-title\">\r\n            <h2>Delivery Address</h2>\r\n          </div>\r\n\r\n          <div className=\"checkout__category-details\">\r\n            <div className=\"checkout__form-group\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={address}\r\n                placeholder=\"Gujranwala\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"checkout__form-group\">\r\n              <label htmlFor=\"street\">Enter Street No.</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                value={street}\r\n                placeholder=\"street no.6 house no.1\"\r\n                onChange={(e) => setStreet(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"checkout__form-group\">\r\n              <label htmlFor=\"street\">Enter Street No.</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"postalCode\"\r\n                value={postalCode ? postalCode : \"\"}\r\n                placeholder=\"Postal Code\"\r\n                onChange={postalCodeChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"checkout__category\">\r\n          <div className=\"checkout__category-title\">\r\n            <h2>Review Items and Delivery</h2>\r\n          </div>\r\n\r\n          <div\r\n            className=\"checkout__category-details\"\r\n            style={{ flexWrap: \"wrap\" }}>\r\n            {basket?.map((item, i) => (\r\n              <CartProduct {...item} removeID={i} key={i} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"checkout__category\">\r\n          <div className=\"checkout__category-title\">\r\n            <h2>Payment Methods</h2>\r\n          </div>\r\n\r\n          <div className=\"checkout__category-details\">\r\n            <div className=\"checkout__payment-section\" style={{ width: \"60%\" }}>\r\n              <h2 style={{ marginTop: \"20px\" }}>\r\n                Total <span style={{ marginLeft: \"20px\" }}></span>{\" \"}\r\n                {getBasketTotal(basket)} â‚¬\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Paypal\r\n          total={getBasketTotal(basket)}\r\n          onSucccess={transactionSuccess}\r\n          onCancel={transactionCancel}\r\n          onError={transactionError}\r\n        />\r\n        {/* <button className=\"paythebill__btn\" onClick={handleClick}></button> */}\r\n        {/* <Paypal\r\n          transactionSuccess={transactionSuccess}\r\n          transactionError={transactionError}\r\n          transactionCancel={transactionCancel}\r\n          total={getBasketTotal(basket)}\r\n          something=\"something else\"\r\n        /> */}\r\n        {/* Payment Button */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}