{"version":3,"sources":["Components/DevAdmin/Orders/Orders/ManageOrders.jsx"],"names":["OneUser","lazy","ManageOrders","useState","error","setError","token","useStateValue","orders","setOrders","getOrders","a","auth","headers","Authorization","axios","get","response","data","useEffect","then","setTimeout","className","map","order","i","Fragment","length","fallback"],"mappings":"wOAKMA,EAAUC,gBAAK,kBAAM,kCAoDZC,UAlDM,WACnB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAUC,cAAVD,MACR,EAA4BH,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,sEAERC,EAAO,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYR,EAAM,MAH9B,SAMDS,IAAMC,IAAI,sBAAuBJ,GANhC,wEAQdP,EAAS,KAAMY,SAASC,KAAKd,OARf,yDAAH,qDA2Bf,OAhBAe,qBAAU,WACJb,EAAM,IACRI,IAAYU,MAAK,SAACH,GAChBR,EAAUQ,EAASC,KAAKV,aAK3B,CAACF,IAEAF,GACFiB,YAAW,WACThB,EAAS,QACR,KAIH,sBAAKiB,UAAU,eAAf,UACGlB,GAAS,qBAAKkB,UAAU,aAAf,SAA6BlB,IACvC,qBAAKkB,UAAU,0BAAf,gBACGd,QADH,IACGA,OADH,EACGA,EAAQe,KAAI,SAACC,EAAOC,GAAR,OACX,cAAC,IAAMC,SAAP,UACGF,EAAMhB,OAAOmB,OAAS,GACrB,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,cAAC5B,EAAD,eAAawB,OAHEC","file":"static/js/13.d24f12f4.chunk.js","sourcesContent":["import React, { useEffect, useState, lazy, Suspense } from \"react\";\nimport \"./ManageOrders.css\";\nimport { useStateValue } from \"./../../../../StateProvider\";\nimport axios from \"axios\";\nimport Loading from \"../../../Screens/Global/Loading\";\nconst OneUser = lazy(() => import(\"../User/OneUser\"));\n\nconst ManageOrders = () => {\n  const [error, setError] = useState(null);\n  const { token } = useStateValue();\n  const [orders, setOrders] = useState([]);\n\n  const getOrders = async () => {\n    try {\n      const auth = {\n        headers: { Authorization: `Bearer ${token[0]}` },\n      };\n\n      return await axios.get(\"/api/user/allorders\", auth);\n    } catch (error) {\n      setError(error.response.data.error);\n    }\n  };\n  useEffect(() => {\n    if (token[0]) {\n      getOrders().then((response) => {\n        setOrders(response.data.orders);\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token]);\n\n  if (error) {\n    setTimeout(() => {\n      setError(null);\n    }, 2000);\n  }\n\n  return (\n    <div className=\"manageOrders\">\n      {error && <div className=\"error__box\">{error}</div>}\n      <div className=\"manageOrders__container\">\n        {orders?.map((order, i) => (\n          <React.Fragment key={i}>\n            {order.orders.length > 0 && (\n              <Suspense fallback={<Loading />}>\n                <OneUser {...order} />\n              </Suspense>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManageOrders;\n"],"sourceRoot":""}