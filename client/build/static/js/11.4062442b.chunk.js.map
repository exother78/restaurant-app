{"version":3,"sources":["reducer.js","Components/Screens/Global/OrderTotal.jsx","Components/Screens/Checkout/Paypal/Paypal.jsx","Components/Screens/Checkout/Pay.jsx"],"names":["getBasketTotal","basket","reduce","amount","item","price","quantity","OrderTotal","navigate","useNavigate","state","useStateValue","setBasket","useState","error","setError","userAPI","data","postalData","setTimeout","className","length","style","color","fontSize","map","i","title","parseFloat","deliveryPrice","toFixed","onClick","to","Paypal","onSuccess","onCancel","onError","total","loading","deferLoading","options","locale","intent","currency","fundingSource","FUNDING","PAYPAL","onApprove","createOrder","actions","console","log","order","create","purchase_units","value","layout","label","height","Pay","token","email","lastName","name","phone","userID","postalCode","address","building","checkPhone","checkEmail","checkName","setDeferLoading","transactionSuccess","paymentData","a","time","Date","now","axios","post","orders","orderNumber","paymentID","orderID","deliveryCharges","headers","Authorization","then","response","transactionError","transactionCancel","useEffect","minOrder","parseInt","e","padding","margin","Footer"],"mappings":"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","file":"static/js/11.4062442b.chunk.js","sourcesContent":["export const getBasketTotal = (basket) => {\r\n  return basket?.reduce(\r\n    (amount, item) => item.price * item.quantity + amount,\r\n    0\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./OrderTotal.css\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport ShoppingBasketRoundedIcon from \"@mui/icons-material/ShoppingBasketRounded\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst OrderTotal = () => {\r\n  const navigate = useNavigate();\r\n  const state = useStateValue();\r\n  const [ basket, setBasket ] = state.basket;\r\n  const [ error, setError ] = useState( null );\r\n  const { userAPI } = useStateValue();\r\n  const [ data ] = userAPI.postalData\r\n\r\n\r\n  const emptyBasket = () => {\r\n    setBasket( [] );\r\n  };\r\n\r\n  const checkoutClick = () => {\r\n    if ( basket.length > 0 ) {\r\n      navigate( \"/checkout\" );\r\n    }\r\n  };\r\n\r\n  if ( error ) {\r\n    setTimeout( () => {\r\n      setError( null );\r\n    }, 2000 );\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"order__right-section\">\r\n      <div className=\"order__right-section-content\">\r\n        <h2 className=\"orderTotal__title\">\r\n          { basket?.length } items in Cart\r\n          <ShoppingBasketRoundedIcon\r\n            style={ { color: \"#d70f64\", fontSize: \"xx-large\" } }\r\n          />\r\n        </h2>\r\n        { basket?.map( ( item, i ) => (\r\n          <div key={ i } className=\"order__total-list\">\r\n            <p className=\"order__total-title\">{ item?.title }</p>\r\n            <p className=\"order__total-price\">\r\n              <span className=\"order__total-list-text\">x{ item?.quantity }</span>\r\n              { item?.price }\r\n            </p>\r\n          </div>\r\n        ) ) }\r\n        {/* <div className=\"order__total-list\" >\r\n          <p className=\"order__total-title\" style={{ fontSize: 'small' }}>Delivery Fee</p>\r\n          <p className=\"order__total-price\" style={{ justifyContent: 'right', fontSize: 'large' }}>\r\n            {data?.deliveryPrice}\r\n          </p>\r\n        </div> */}\r\n        <h3 className=\"order__total\">\r\n          <span> Total </span>\r\n          { parseFloat( getBasketTotal( basket ) ) }\r\n        </h3>\r\n        { data?.deliveryPrice ? <h4 className='order__total-fee-text' >with delivery fee <span>\r\n          { ( parseFloat( getBasketTotal( basket ) ) + parseFloat( data?.deliveryPrice ) ).toFixed( 2 ) }\r\n        </span>\r\n        </h4> : <h4>Enter Postal Info</h4> }\r\n        <div className=\"order__total-btns\">\r\n          <button className=\"order__total-empty-button\" onClick={ emptyBasket }>\r\n            Empty Cart\r\n          </button>\r\n          <Link\r\n            to={ basket.length > 0 ? \"/checkout\" : \"/order\" }\r\n            className=\"order__total-checkout-button-link\">\r\n            <button\r\n              className=\"order__total-checkout-button\"\r\n              onClick={ checkoutClick }>\r\n              Checkout\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderTotal;\r\n","import React from \"react\";\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons,\r\n  FUNDING,\r\n} from \"@paypal/react-paypal-js\";\r\n// import Loading from \"../../Global/Loading\";\r\n\r\n// const initialOptions = {\r\n//   \"client-id\":\r\n//     \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n//   \"merchant-id\": \"UGUFDKZNBH2TN\",\r\n//   \"buyer-country\": \"DE\",\r\n//   currency: \"EURO\",\r\n//   locale: \"de_DE\",\r\n// };\r\n\r\nconst Paypal = ({ onSuccess, onCancel, onError, total, loading, setError }) => {\r\n  // const [{ isPending, isResolved }] = usePayPalScriptReducer();\r\n  return (\r\n    <PayPalScriptProvider\r\n      deferLoading={loading}\r\n      options={{\r\n        \"client-id\":\r\n          \"ATSNzle97H2HdLUL3GMnS5I8PuKouWyteOOCVNR-3UqTW5N_0tFs3ddtDitE1IfqAlRXI4hbaEo2yDT9\",\r\n        // \"client-id\":\r\n        //   \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n        \"merchant-id\": \"92V8XPRZFHZRE\",\r\n        // // \"buyer-country\": \"IT\",\r\n        // // locale: \"de_DE\",\r\n        // locale: \"en_US\",\r\n        locale: \"it_IT\",\r\n        intent: \"capture\",\r\n        currency: \"EUR\",\r\n      }}>\r\n      <PayPalButtons\r\n        fundingSource={FUNDING.PAYPAL}\r\n        // style={{ layout: \"horizontal\" }}\r\n        // createBillingAgreement={(data) =>\r\n        //   console.log(\"create Billing agreement: \", data)\r\n        // }\r\n        // onApprove={(data) => console.log(\"onApprove: \", data)}\r\n        onApprove={onSuccess}\r\n        onError={onError}\r\n        onCancel={onCancel}\r\n        // onError={(err) => console.log(\"error occured: \", err)}\r\n        // onInit={(data) => console.log(\"on init: \", data)}\r\n        createOrder={(data, actions) => {\r\n          console.log(\"data: \", data);\r\n          if (total !== 0)\r\n            return actions.order.create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    value: total,\r\n                  },\r\n                },\r\n              ],\r\n            });\r\n        }}\r\n        style={{\r\n          layout: \"horizontal\",\r\n          label: \"checkout\",\r\n          height: 40,\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default Paypal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Pay.css\";\r\nimport Paypal from \"./Paypal/Paypal\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport OrderTotal from \"./../Global/OrderTotal\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport Footer from \"../Home/Sections/Footer\";\r\n\r\nconst Pay = () => {\r\n  const navigate = useNavigate()\r\n  const state = useStateValue();\r\n  const { userAPI, token } = useStateValue();\r\n  const { email, lastName, name, phone } = userAPI;\r\n  const { userID } = userAPI;\r\n  const [ basket, setBasket ] = state?.basket;\r\n  const [ postalCode ] = userAPI?.postalCode;\r\n  const [ address ] = userAPI?.address;\r\n  const [ building ] = userAPI?.building;\r\n  const [ checkPhone ] = userAPI?.checkPhone;\r\n  const [ checkEmail ] = userAPI?.checkEmail;\r\n  const [ checkName ] = userAPI?.checkName;\r\n  const [ data ] = userAPI.postalData\r\n  const [ error, setError ] = useState( \"\" );\r\n  const [ deferLoading, setDeferLoading ] = useState( true );\r\n\r\n\r\n\r\n  const transactionSuccess = async ( paymentData ) => {\r\n    const time = Date.now() + 1983;\r\n    try {\r\n\r\n      await axios\r\n        .post(\r\n          \"/api/user/createorder\",\r\n          {\r\n            orders: {\r\n              orderNumber: time,\r\n              userID,\r\n              postalCode,\r\n              address,\r\n              paymentID: paymentData.orderID,\r\n              building,\r\n              basket,\r\n              name: name ? name : checkName,\r\n              email: email ? email : checkEmail,\r\n              lastName,\r\n              phone: phone ? phone : checkPhone,\r\n              time, total: getBasketTotal( basket ),\r\n              deliveryCharges: data?.deliveryPrice\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${ token[ 0 ] }`,\r\n            },\r\n          }\r\n        )\r\n        .then( () => {\r\n          setBasket( [] );\r\n          navigate( `/checkout/ordersuccess/${ time }` )\r\n          // window.location.href = `/checkout/ordersuccess/${time + 1983}`\r\n        } );\r\n    } catch ( error ) {\r\n      setError( error.response.data.error );\r\n    }\r\n  };\r\n\r\n  const transactionError = async () => {\r\n    setError( \"Transaction not successful\" );\r\n  };\r\n\r\n  const transactionCancel = async ( data ) => {\r\n    setError( \"Cancelled Transaction\" );\r\n  };\r\n\r\n\r\n  useEffect( () => {\r\n    if (\r\n      !postalCode ||\r\n      !address ||\r\n      !building ||\r\n      !checkName ||\r\n      !checkEmail ||\r\n      !checkPhone || parseFloat( getBasketTotal( basket ) )?.toFixed( 2 ) < parseFloat( data?.minOrder ) ||\r\n      basket.length === 0\r\n    ) {\r\n      setDeferLoading( true );\r\n    }\r\n    if (\r\n      postalCode &&\r\n      address &&\r\n      building &&\r\n      checkName &&\r\n      checkEmail &&\r\n      checkPhone &&\r\n      parseFloat( getBasketTotal( basket ) )?.toFixed( 2 ) >= parseInt( data?.minOrder ) &&\r\n      basket.length > 0\r\n    ) {\r\n      setDeferLoading( false );\r\n    }\r\n    if ( basket?.length === 0 ) setError( \"No items in the cart\" );\r\n  }, [ building, postalCode, basket, address, deferLoading, checkName, checkEmail, checkPhone, data?.minOrder ] );\r\n\r\n\r\n  if ( error ) {\r\n    setTimeout( () => {\r\n      setError( null );\r\n    }, 2000 );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"paymentOptions\">\r\n        { error && <div className=\"error__box\">{ error }</div> }\r\n        <OrderTotal />\r\n\r\n        <div className=\"paymentOptions-Paypal-btn\">\r\n          <button\r\n            onClick={ ( e ) => transactionSuccess( { orderID: \"something now\" }, e ) }\r\n            style={ { padding: \"10px 15px\", margin: \"10px\" } }>\r\n            Pay the bill\r\n          </button>\r\n          <Paypal\r\n            total={ ( parseFloat( getBasketTotal( basket ) ) + parseFloat( data?.deliveryPrice ) ) }\r\n            onSuccess={ transactionSuccess }\r\n            onCancel={ transactionCancel }\r\n            onError={ transactionError }\r\n            setError={ setError }\r\n            loading={ deferLoading }\r\n          />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pay;\r\n"],"sourceRoot":""}