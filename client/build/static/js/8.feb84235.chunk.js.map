{"version":3,"sources":["reducer.js","Components/Screens/Cart/Sections/CartProduct.jsx","Components/Screens/Checkout/Paypal/Paypal.jsx","Components/Screens/Checkout/Checkout.jsx"],"names":["getBasketTotal","basket","reduce","amount","item","price","quantity","CartProduct","id","title","description","image","removeID","state","useStateValue","setBasket","className","src","alt","substring","type","onClick","s","findIndex","newArray","splice","Paypal","onSuccess","onCancel","onError","total","loading","setError","deferLoading","options","locale","intent","currency","fundingSource","FUNDING","PAYPAL","onApprove","createOrder","data","actions","console","log","order","create","purchase_units","value","style","layout","label","height","Checkout","userAPI","token","postalCode","setPostalCode","email","lastName","name","userID","useState","address","setAddress","street","setStreet","error","setDeferLoading","transactionSuccess","a","time","Date","now","length","axios","post","orders","orderNumber","paymentID","orderID","headers","Authorization","then","window","location","href","response","transactionError","transactionCancel","setTimeout","useEffect","htmlFor","required","placeholder","onChange","e","target","flexWrap","map","i","key","width","marginTop","marginLeft","preventDefault","border"],"mappings":"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","file":"static/js/8.feb84235.chunk.js","sourcesContent":["export const getBasketTotal = (basket) => {\r\n  return basket?.reduce(\r\n    (amount, item) => item.price * item.quantity + amount,\r\n    0\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./CartProduct.css\";\r\nimport { useStateValue } from \"../../../../StateProvider\";\r\n\r\nconst CartProduct = ({\r\n  id,\r\n  title,\r\n  description,\r\n  price,\r\n  image,\r\n  removeID,\r\n  quantity,\r\n}) => {\r\n  const state = useStateValue();\r\n  const [basket, setBasket] = state.basket;\r\n\r\n  const handleAdd = () => {\r\n    const s = basket.findIndex((item) => item.id === id);\r\n\r\n    if (s !== -1) {\r\n      let newArray = [...basket];\r\n      newArray[s] = { ...newArray[s], quantity: newArray[s].quantity + 1 };\r\n      setBasket(newArray);\r\n    }\r\n    if (s === -1) return;\r\n  };\r\n\r\n  const handleSubtract = () => {\r\n    const s = basket.findIndex((item) => item.id === id);\r\n\r\n    if (s !== -1) {\r\n      if (basket[s].quantity > 1) {\r\n        let newArray = [...basket];\r\n        newArray[s] = { ...newArray[s], quantity: newArray[s].quantity - 1 };\r\n        setBasket(newArray);\r\n      }\r\n      if (basket[s].quantity === 1) {\r\n        let newArray = [...basket];\r\n        newArray.splice(s, 1);\r\n        setBasket(newArray);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart__product\">\r\n      <div className=\"cart__product-container\">\r\n        <div className=\"cart__product-image-container\">\r\n          <img src={image} alt=\"\" className=\"cart__product-image\" />\r\n        </div>\r\n        <div className=\"cart__product-text-section\">\r\n          <h3 className=\"cart__product-title\">{title}</h3>\r\n          <p className=\"cartProduct__description\">\r\n            {description.substring(0, 60)}\r\n          </p>\r\n          <p className=\"cart__product-price\">â‚¬ {price}</p>\r\n        </div>\r\n        <div className=\"cart__product-price-incre\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"cartProduct__minus cartProduct__same\"\r\n            onClick={handleSubtract}>\r\n            -\r\n          </button>\r\n          <span className=\"cartProduct__quantity cartProduct__same\">\r\n            {quantity}\r\n          </span>\r\n          <button\r\n            type=\"button\"\r\n            className=\"cartProduct__plus cartProduct__same\"\r\n            onClick={handleAdd}>\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartProduct;\r\n","import React from \"react\";\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons,\r\n  FUNDING,\r\n} from \"@paypal/react-paypal-js\";\r\n// import Loading from \"../../Global/Loading\";\r\n\r\n// const initialOptions = {\r\n//   \"client-id\":\r\n//     \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n//   \"merchant-id\": \"UGUFDKZNBH2TN\",\r\n//   \"buyer-country\": \"DE\",\r\n//   currency: \"EURO\",\r\n//   locale: \"de_DE\",\r\n// };\r\n\r\nconst Paypal = ({ onSuccess, onCancel, onError, total, loading, setError }) => {\r\n  // const [{ isPending, isResolved }] = usePayPalScriptReducer();\r\n  return (\r\n    <PayPalScriptProvider\r\n      deferLoading={loading}\r\n      options={{\r\n        \"client-id\":\r\n          \"ATSNzle97H2HdLUL3GMnS5I8PuKouWyteOOCVNR-3UqTW5N_0tFs3ddtDitE1IfqAlRXI4hbaEo2yDT9\",\r\n        // \"client-id\":\r\n        //   \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n        \"merchant-id\": \"92V8XPRZFHZRE\",\r\n        // // \"buyer-country\": \"IT\",\r\n        // // locale: \"de_DE\",\r\n        // locale: \"en_US\",\r\n        locale: \"it_IT\",\r\n        intent: \"capture\",\r\n        currency: \"EUR\",\r\n      }}>\r\n      {/* {isPending ? (\r\n        <Loading />\r\n      ) : isResolved ? ( */}\r\n      <PayPalButtons\r\n        fundingSource={FUNDING.PAYPAL}\r\n        // style={{ layout: \"horizontal\" }}\r\n        // createBillingAgreement={(data) =>\r\n        //   console.log(\"create Billing agreement: \", data)\r\n        // }\r\n        // onApprove={(data) => console.log(\"onApprove: \", data)}\r\n        onApprove={onSuccess}\r\n        onError={onError}\r\n        onCancel={onCancel}\r\n        // onError={(err) => console.log(\"error occured: \", err)}\r\n        // onInit={(data) => console.log(\"on init: \", data)}\r\n        createOrder={(data, actions) => {\r\n          console.log(\"data: \", data);\r\n          if (total !== 0)\r\n            return actions.order.create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    value: total,\r\n                  },\r\n                },\r\n              ],\r\n            });\r\n        }}\r\n        style={{\r\n          layout: \"horizontal\",\r\n          label: \"checkout\",\r\n          height: 40,\r\n        }}\r\n      />\r\n      {/* ) : ( setError(\"Paypal button not loaded please refresh\") )} */}\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default Paypal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Checkout.css\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport CartProduct from \"../Cart/Sections/CartProduct\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport axios from \"axios\";\r\nimport Paypal from \"./Paypal/Paypal\";\r\n\r\nconst Checkout = () => {\r\n  const state = useStateValue();\r\n  const { userAPI, token } = useStateValue();\r\n  const [postalCode, setPostalCode] = userAPI.postalCode;\r\n  const { email, lastName, name } = userAPI;\r\n  const { userID } = userAPI;\r\n  const [basket, setBasket] = state.basket;\r\n  const [address, setAddress] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [deferLoading, setDeferLoading] = useState(true);\r\n\r\n  const transactionSuccess = async (data) => {\r\n    const time = Date.now();\r\n\r\n    try {\r\n      if (!address) {\r\n        setError(\"Please enter your address to continue order\");\r\n      }\r\n      if (!userID) {\r\n        setError(\"Please Login to continue\");\r\n      }\r\n\r\n      if (!postalCode) {\r\n        setError(\"Please Enter your postal code to continue\");\r\n      }\r\n\r\n      if (userID && postalCode && address && basket.length > 0) {\r\n        await axios\r\n          .post(\r\n            \"/api/user/createorder\",\r\n            {\r\n              orders: {\r\n                orderNumber: time + 1983,\r\n                userID,\r\n                postalCode,\r\n                address,\r\n                paymentID: data.orderID,\r\n                street,\r\n                basket,\r\n                name,\r\n                email,\r\n                lastName,\r\n                time,\r\n                total: getBasketTotal(basket),\r\n              },\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token[0]}`,\r\n              },\r\n            }\r\n          )\r\n          .then(() => {\r\n            setBasket([]);\r\n            window.location.href = \"/\";\r\n          });\r\n      }\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  // const transactionSuccesss = async (data) => {\r\n  //   try {\r\n  //     const time = new Date();\r\n  //     if (userID) {\r\n  //       if (postalCode) {\r\n  //         if (basket.length > 0) {\r\n  //           console.log(\"transaction Success: \", data);\r\n  //           await axios\r\n  //             .patch(`/api/user/updateorders/${userID}`, {\r\n  //               orders: {\r\n  //                 postalCode,\r\n  //                 address,\r\n  //                 email,\r\n  //                 name,\r\n  //                 lastName,\r\n  //                 time,\r\n  //                 userID,\r\n  //                 basket,\r\n  //               },\r\n  //             })\r\n  //             .then(() => {\r\n  //               setBasket([]);\r\n  //               window.location.href = \"/\";\r\n  //             });\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     if (!postalCode) {\r\n  //       setError(\"Please enter your postal code first\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setError(error.response.data.error);\r\n  //   }\r\n  // };\r\n\r\n  // const getPrint = async () => {\r\n  //   try {\r\n  //     const d = await axios.get(\"/api/print\");\r\n  //     console.log(\"this is all data: \", d);\r\n  //   } catch (error) {\r\n  //     console.log(\"this is error response: \", error.response.data.error);\r\n  //   }\r\n  //   console.log(\"print is done right, Shahid\");\r\n  // };\r\n\r\n  const transactionError = async () => {\r\n    setError(\"Transaction not successful\");\r\n  };\r\n\r\n  const transactionCancel = async (data) => {\r\n    console.log(\"cancelled: \", data);\r\n  };\r\n\r\n  const postalCodeChange = (e) => {\r\n    setPostalCode(e.target.value);\r\n    // localStorage.setItem(\"pcl\", e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userID || !postalCode || !address || !street || basket.length === 0) {\r\n      setDeferLoading(true);\r\n    }\r\n    if (userID && postalCode && address && street && basket.length > 0) {\r\n      setDeferLoading(false);\r\n    }\r\n  }, [street, userID, postalCode, basket, address, deferLoading]);\r\n\r\n  return (\r\n    <div className=\"checkout\">\r\n      {error && <div className=\"error__box\">{error}</div>}\r\n      <form>\r\n        <div className=\"checkout__categories\">\r\n          <div className=\"checkout__category\">\r\n            <div className=\"checkout__category-title\">\r\n              <h2>Delivery Address</h2>\r\n            </div>\r\n\r\n            <div className=\"checkout__category-details\">\r\n              <div className=\"checkout__form-group\">\r\n                <label htmlFor=\"address\">Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  required\r\n                  value={address ? address : \"\"}\r\n                  placeholder=\"eg. Dusseldorf\"\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"checkout__form-group\">\r\n                <label htmlFor=\"street\">Enter Street No.</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"street\"\r\n                  required\r\n                  value={street ? street : \"\"}\r\n                  placeholder=\"eg. street no.6 house no.1\"\r\n                  onChange={(e) => setStreet(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"checkout__form-group\">\r\n                <label htmlFor=\"street\">Postal Code</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"postalCode\"\r\n                  required\r\n                  value={postalCode ? postalCode : \"\"}\r\n                  placeholder=\"Postal Code\"\r\n                  onChange={postalCodeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"checkout__category\">\r\n            <div className=\"checkout__category-title\">\r\n              <h2>Review Items and Delivery</h2>\r\n            </div>\r\n\r\n            <div\r\n              className=\"checkout__category-details\"\r\n              style={{ flexWrap: \"wrap\" }}>\r\n              {basket?.map((item, i) => (\r\n                <CartProduct {...item} removeID={i} key={i} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"checkout__category\">\r\n            <div className=\"checkout__category-title\">\r\n              <h2>Payment Methods</h2>\r\n            </div>\r\n\r\n            <div className=\"checkout__category-details\">\r\n              <div\r\n                className=\"checkout__payment-section\"\r\n                style={{ width: \"60%\" }}>\r\n                <h2 style={{ marginTop: \"20px\" }}>\r\n                  Total <span style={{ marginLeft: \"20px\" }}></span>{\" \"}\r\n                  {getBasketTotal(basket)} â‚¬\r\n                </h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(e) => e.preventDefault()}\r\n            style={{ border: \"none\" }}>\r\n            <Paypal\r\n              total={getBasketTotal(basket)}\r\n              onSuccess={transactionSuccess}\r\n              onCancel={transactionCancel}\r\n              onError={transactionError}\r\n              setError={setError}\r\n              loading={deferLoading}\r\n            />\r\n          </button>\r\n          {/* </div> */}\r\n          {/* <button\r\n            className=\"paythebill__btn\"\r\n            onClick={() => transactionSuccess({ orderID: \"something\" })}>\r\n            print the bill\r\n          </button> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}