{"version":3,"sources":["reducer.js","Components/Screens/Global/OrderTotal.jsx","Components/Screens/Checkout/Paypal/Paypal.jsx","Components/Screens/Checkout/Pay.jsx"],"names":["getBasketTotal","basket","reduce","amount","item","price","quantity","OrderTotal","navigate","useNavigate","state","useStateValue","setBasket","useState","error","setError","userAPI","data","postalData","deliveryOption","setTimeout","className","length","style","color","fontSize","map","i","title","display","fontWeight","deliveryPrice","parseFloat","toFixed","onClick","to","Paypal","onSuccess","onCancel","onError","total","loading","deferLoading","options","locale","intent","currency","fundingSource","FUNDING","PAYPAL","onApprove","createOrder","actions","console","log","order","create","purchase_units","value","layout","label","height","Pay","token","email","lastName","name","phone","userID","postalCode","address","building","checkPhone","checkEmail","checkName","paymentOption","takeaway","setDeferLoading","totalWithDelivery","setTotalWithDelivery","useEffect","transactionSuccess","paymentData","a","time","Date","now","axios","post","orders","orderNumber","paymentID","orderID","deliveryCharges","paymentStatus","headers","Authorization","then","response","transactionSuccessTakeaway","orderSubmit","orderSubmitTakeaway","transactionError","transactionCancel","minOrder","parseInt","e","padding","margin","Footer"],"mappings":"mGAAA,kCAAO,IAAMA,EAAiB,SAACC,GAC7B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQC,QACb,SAACC,EAAQC,GAAT,OAAkBA,EAAKC,MAAQD,EAAKE,SAAWH,IAC/C,K,mHC2GWI,IAvGI,WACjB,IAAMC,EAAWC,cACXC,EAAQC,cACd,cAA4BD,EAAMT,OAAlC,GAAOA,EAAP,KAAeW,EAAf,KACA,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAYL,cAAZK,QACDC,EAAP,YAAeD,EAAQE,WAAvB,MACOC,EAAP,YAAyBH,EAAQG,eAAjC,MAkBA,OANIL,GACFM,YAAW,WACTL,EAAS,QACR,KAIH,qBAAKM,UAAU,uBAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAIA,UAAU,oBAAd,iBACGpB,QADH,IACGA,OADH,EACGA,EAAQqB,OADX,iBAEE,cAAC,IAAD,CACEC,MAAO,CAAEC,MAAO,UAAWC,SAAU,iBAJ3C,OAOGxB,QAPH,IAOGA,OAPH,EAOGA,EAAQyB,KAAI,SAACtB,EAAMuB,GAAP,OACX,sBAAaN,UAAU,oBAAvB,UACE,mBAAGA,UAAU,qBAAb,gBAAmCjB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMwB,QACzC,oBAAGP,UAAU,qBAAb,UACE,uBAAMA,UAAU,yBAAhB,qBACIjB,QADJ,IACIA,OADJ,EACIA,EAAME,YAFZ,OAIGF,QAJH,IAIGA,OAJH,EAIGA,EAAMC,MAJT,eAFQsB,MAWZ,sBACEN,UAAU,oBACVE,MAAO,CACLM,QAA4B,aAAnBV,EAAgC,OAAS,QAHtD,UAKE,mBAAGE,UAAU,uBACb,oBACEA,UAAU,qBACVE,MAAO,CAAEE,SAAU,QAASK,WAAY,QAF1C,UAGE,sBACET,UAAU,yBACVE,MAAO,CAAEE,SAAU,QAASK,WAAY,QAF1C,0BAHF,OAQGb,QARH,IAQGA,OARH,EAQGA,EAAMc,oBAGX,qBAAIV,UAAU,eAAd,UACE,2CACCW,WAAWhC,YAAeC,IAASgC,QAAQ,GAF9C,aAIoB,aAAnBd,EAAgC,MAAW,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMc,eAC5C,qBACEV,UAAU,wBADZ,8BAGoB,IAClB,gCAEIW,WAAWhC,YAAeC,IAC1B+B,WAAU,OAACf,QAAD,IAACA,OAAD,EAACA,EAAMc,gBACjBE,QAAQ,QAId,mDAEF,sBAAKZ,UAAU,oBAAf,UACE,wBACEA,UAAU,4BACVa,QA5EU,WAClBtB,EAAU,KAyEJ,wBAKA,cAAC,IAAD,CACEuB,GAAIlC,EAAOqB,OAAS,EAAI,YAAc,SACtCD,UAAU,oCAFZ,SAGE,wBACEA,UAAU,+BACVa,QAhFU,WAChBjC,EAAOqB,OAAS,GAClBd,EAAS,cA4EH,kC,sJC5BG4B,EArDA,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAwB,EAAf1B,SAE9D,OACE,cAAC,IAAD,CACE2B,aAAcD,EACdE,QAAS,CACP,YACE,mFAGF,cAAe,gBAIfC,OAAQ,QACRC,OAAQ,UACRC,SAAU,OAbd,SAeE,cAAC,IAAD,CACEC,cAAeC,IAAQC,OAMvBC,UAAWb,EACXE,QAASA,EACTD,SAAUA,EAGVa,YAAa,SAAClC,EAAMmC,GAElB,GADAC,QAAQC,IAAI,SAAUrC,GACR,IAAVuB,EACF,OAAOY,EAAQG,MAAMC,OAAO,CAC1BC,eAAgB,CACd,CACEtD,OAAQ,CACNuD,MAAOlB,QAMnBjB,MAAO,CACLoC,OAAQ,aACRC,MAAO,WACPC,OAAQ,S,yDC8RHC,UAnVH,WACV,IAAMtD,EAAWC,cACXC,EAAQC,cACd,EAA2BA,cAAnBK,EAAR,EAAQA,QAAS+C,EAAjB,EAAiBA,MACTC,EAAiChD,EAAjCgD,MAAOC,EAA0BjD,EAA1BiD,SAAUC,EAAgBlD,EAAhBkD,KAAMC,EAAUnD,EAAVmD,MACvBC,EAAWpD,EAAXoD,OACR,SAA4B1D,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOT,OAAnC,mBAAOA,EAAP,KAAeW,EAAf,KACA,SAAqBI,QAArB,IAAqBA,OAArB,EAAqBA,EAASqD,WAAvBA,EAAP,oBACA,SAAkBrD,QAAlB,IAAkBA,OAAlB,EAAkBA,EAASsD,QAApBA,EAAP,oBACA,SAAmBtD,QAAnB,IAAmBA,OAAnB,EAAmBA,EAASuD,SAArBA,EAAP,oBACA,SAAqBvD,QAArB,IAAqBA,OAArB,EAAqBA,EAASwD,WAAvBA,EAAP,oBACA,SAAqBxD,QAArB,IAAqBA,OAArB,EAAqBA,EAASyD,WAAvBA,EAAP,oBACA,SAAoBzD,QAApB,IAAoBA,OAApB,EAAoBA,EAAS0D,UAAtBA,EAAP,oBACOzD,EAAP,YAAeD,EAAQE,WAAvB,MACOyD,EAAP,YAAwB3D,EAAQ2D,cAAhC,MACOxD,EAAP,YAAyBH,EAAQG,eAAjC,MACOyD,EAAP,YAAmB5D,EAAQ4D,SAA3B,MACA,EAA0B/D,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,oBAAS,GAAjD,mBAAO6B,EAAP,KAAqBmC,EAArB,KACA,EAAkDhE,mBAAS,MAA3D,mBAAOiE,EAAP,KAA0BC,EAA1B,KAEAC,qBAAU,WACRD,EACE/C,WAAWhC,YAAeC,IAAW+B,WAAU,OAACf,QAAD,IAACA,OAAD,EAACA,EAAMc,kBAEvD,CAAC9B,EAAD,OAASgB,QAAT,IAASA,OAAT,EAASA,EAAMc,gBAElB,IAAMkD,GAAkB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACzB9B,QAAQC,IAAI,iBAAkB4B,GAExBE,EAAOC,KAAKC,MAAQ,KAHD,kBAKjBC,IACHC,KACC,wBACA,CACEC,OAAQ,CACNC,YAAaN,EACbhB,SACAC,aACAC,UACAqB,UAAWT,EAAYU,QACvBrB,WACAtE,SACAiE,KAAMA,GAAcQ,EACpBV,MAAOA,GAAgBS,EACvBR,WACAE,MAAOA,GAAgBK,EACvBY,OACA5C,MAAOxC,YAAeC,GACtB4F,gBAAe,OAAE5E,QAAF,IAAEA,OAAF,EAAEA,EAAMc,cACvBZ,iBACAwD,gBACAmB,cAAe,aAGnB,CACEC,QAAS,CACPC,cAAc,UAAD,OAAajC,EAAM,OAIrCkC,MAAK,WACJrF,EAAU,IACVJ,EAAS,0BAAD,OAA4B4E,OArCjB,uDAwCvBrE,EAAS,KAAMmF,SAASjF,KAAKH,OAxCN,yDAAH,sDA4ClBqF,GAA0B,uCAAG,WAAOjB,GAAP,eAAAC,EAAA,6DACjC9B,QAAQC,IAAI,iBAAkB4B,GAExBE,EAAOC,KAAKC,MAAQ,KAHO,kBAKzBC,IACHC,KACC,wBACA,CACEC,OAAQ,CACNC,YAAaN,EACbhB,SACAuB,UAAWT,EAAYU,QACvB3F,SACAiE,KAAMA,GAAcQ,EACpBV,MAAOA,GAAgBS,EACvBR,WACAE,MAAOA,GAAgBK,EACvBY,OACA5C,MAAOxC,YAAeC,GACtBkB,iBACAwD,gBACAmB,cAAe,aAGnB,CACEC,QAAS,CACPC,cAAc,UAAD,OAAajC,EAAM,OAIrCkC,MAAK,WACJrF,EAAU,IACVJ,EAAS,0BAAD,OAA4B4E,OAjCT,uDAoC/BrE,EAAS,KAAMmF,SAASjF,KAAKH,OApCE,yDAAH,sDAwC1BsF,GAAW,uCAAG,4BAAAjB,EAAA,6DACZC,EAAOC,KAAKC,MAAQ,KADR,kBAGVC,IACHC,KACC,wBACA,CACEC,OAAQ,CACNC,YAAaN,EACbhB,SACAC,aACAC,UACAC,WACAtE,SACAiE,KAAMA,GAAcQ,EACpBV,MAAOA,GAAgBS,EACvBR,WACAE,MAAOA,GAAgBK,EACvBY,OACA5C,MAAOxC,YAAeC,GACtB4F,gBAAe,OAAE5E,QAAF,IAAEA,OAAF,EAAEA,EAAMc,cACvBZ,iBACAwD,gBACAmB,cAAe,YAGnB,CACEC,QAAS,CACPC,cAAc,UAAD,OAAajC,EAAM,OAIrCkC,MAAK,WACJrF,EAAU,IACVJ,EAAS,0BAAD,OAA4B4E,OAlCxB,sDAqChBrE,EAAS,KAAMmF,SAASjF,KAAKH,OArCb,wDAAH,qDAyCXuF,GAAmB,uCAAG,4BAAAlB,EAAA,6DACpBC,EAAOC,KAAKC,MAAQ,KADA,kBAGlBC,IACHC,KACC,wBACA,CACEC,OAAQ,CACNC,YAAaN,EACbhB,SACAnE,SACAiE,KAAMA,GAAcQ,EACpBV,MAAOA,GAAgBS,EACvBR,WACAE,MAAOA,GAAgBK,EACvBY,OACA5C,MAAOxC,YAAeC,GACtBkB,iBACAwD,gBACAmB,cAAe,YAGnB,CACEC,QAAS,CACPC,cAAc,UAAD,OAAajC,EAAM,OAIrCkC,MAAK,WACJrF,EAAU,IACVJ,EAAS,0BAAD,OAA4B4E,OA9BhB,sDAiCxBrE,EAAS,KAAMmF,SAASjF,KAAKH,OAjCL,wDAAH,qDAqCnBwF,GAAgB,uCAAG,sBAAAnB,EAAA,sDACvBpE,EAAS,8BADc,2CAAH,qDAIhBwF,GAAiB,uCAAG,WAAOtF,GAAP,SAAAkE,EAAA,sDACxBpE,EAAS,yBADe,2CAAH,sDAmFvB,OAhFAiE,qBAAU,WAAO,IAAD,IAEXX,GACAC,GACAC,GACAG,GACAD,GACAD,MACD,UAAAxC,WAAWhC,YAAeC,WAA1B,eAAoCgC,QAAQ,IAC5CD,WAAU,OAACf,QAAD,IAACA,OAAD,EAACA,EAAMuF,YACC,IAAlBvG,EAAOqB,QACNL,GAED4D,GAAgB,IAGfR,GACCC,GACAC,GACAG,GACAD,GACAD,IACA,UAAAxC,WAAWhC,YAAeC,WAA1B,eAAoCgC,QAAQ,KAC5CwE,SAAQ,OAACxF,QAAD,IAACA,OAAD,EAACA,EAAMuF,WACfvG,EAAOqB,OAAS,GAChBL,GACD2D,GAAYH,GAAcC,GAAaF,IAExCK,GAAgB,KAGjB,CAACN,EAAUtE,EAAQqE,EAAS5B,EAAcgC,EAAWD,EAAYD,EAAjE,OAA6EvD,QAA7E,IAA6EA,OAA7E,EAA6EA,EAAMuF,SAAU5B,EAAUP,EAAYpD,IA4ClHH,GACFM,YAAW,WACTL,EAAS,QACR,KAGH,qCACE,sBAAKM,UAAU,iBAAf,UACGP,GAAS,qBAAKO,UAAU,aAAf,SAA6BP,IACvC,cAACP,EAAA,EAAD,IAEA,qBAAKc,UAAU,4BAAf,SACqB,mBAAlBsD,EACC,qCACE,wBACEzC,QAAS,SAACwE,GAAD,MACY,iBAAnBvF,EACI8D,GACA,CAAEW,QAAS,iBACXc,GAEmB,aAAnBvF,GACFgF,GACE,CAAEP,QAAS,iBACXc,IAGNnF,MAAO,CAAEoF,QAAS,YAAaC,OAAQ,QAbzC,0BAgBA,cAAC,EAAD,CACEpE,MACqB,aAAnBrB,EACInB,YAAeC,GACf6E,EAENzC,UACqB,iBAAnBlB,EACI8D,GACmB,aAAnB9D,GACFgF,GAEJ7D,SAAUiE,GACVhE,QAAS+D,GACTvF,SAAUA,EACV0B,QAASC,OAIK,mBAAlBiC,GACE,wBACEtD,UAAU,kCACVa,QACqB,iBAAnBf,EACIiF,GACAC,GALR,gCAaR,cAACQ,EAAA,EAAD","file":"static/js/11.892db3e0.chunk.js","sourcesContent":["export const getBasketTotal = (basket) => {\r\n  return basket?.reduce(\r\n    (amount, item) => item.price * item.quantity + amount,\r\n    0\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./OrderTotal.css\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport ShoppingBasketRoundedIcon from \"@mui/icons-material/ShoppingBasketRounded\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst OrderTotal = () => {\r\n  const navigate = useNavigate();\r\n  const state = useStateValue();\r\n  const [basket, setBasket] = state.basket;\r\n  const [error, setError] = useState(null);\r\n  const { userAPI } = useStateValue();\r\n  const [data] = userAPI.postalData;\r\n  const [deliveryOption] = userAPI.deliveryOption;\r\n\r\n  const emptyBasket = () => {\r\n    setBasket([]);\r\n  };\r\n\r\n  const checkoutClick = () => {\r\n    if (basket.length > 0) {\r\n      navigate(\"/checkout\");\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"order__right-section\">\r\n      <div className=\"order__right-section-content\">\r\n        <h2 className=\"orderTotal__title\">\r\n          {basket?.length} items in Cart\r\n          <ShoppingBasketRoundedIcon\r\n            style={{ color: \"#d70f64\", fontSize: \"xx-large\" }}\r\n          />\r\n        </h2>\r\n        {basket?.map((item, i) => (\r\n          <div key={i} className=\"order__total-list\">\r\n            <p className=\"order__total-title\">{item?.title}</p>\r\n            <p className=\"order__total-price\">\r\n              <span className=\"order__total-list-text\">\r\n                x{item?.quantity}\r\n              </span>\r\n              {item?.price} â‚¬\r\n            </p>\r\n          </div>\r\n        ))}\r\n\r\n        <div\r\n          className=\"order__total-list\"\r\n          style={{\r\n            display: deliveryOption === \"takeaway\" ? \"none\" : \"flex\",\r\n          }}>\r\n          <p className=\"order__total-title\"></p>\r\n          <p\r\n            className=\"order__total-price\"\r\n            style={{ fontSize: \"large\", fontWeight: \"bold\" }}>\r\n            <span\r\n              className=\"order__total-list-text\"\r\n              style={{ fontSize: \"small\", fontWeight: \"bold\" }}>\r\n              delivery fee\r\n            </span>\r\n            {data?.deliveryPrice}\r\n          </p>\r\n        </div>\r\n        <h3 className=\"order__total\">\r\n          <span> Total </span>\r\n          {parseFloat(getBasketTotal(basket)).toFixed(2)} â‚¬\r\n        </h3>\r\n        {deliveryOption === \"takeaway\" ? null : data?.deliveryPrice ? (\r\n          <h4\r\n            className=\"order__total-fee-text\"\r\n          >\r\n            with delivery fee{\" \"}\r\n            <span>\r\n              {(\r\n                parseFloat(getBasketTotal(basket)) +\r\n                parseFloat(data?.deliveryPrice)\r\n              ).toFixed(2)}\r\n            </span>\r\n          </h4>\r\n        ) : (\r\n          <h4>Enter Postal Info</h4>\r\n        )}\r\n        <div className=\"order__total-btns\">\r\n          <button\r\n            className=\"order__total-empty-button\"\r\n            onClick={emptyBasket}>\r\n            Empty Cart\r\n          </button>\r\n          <Link\r\n            to={basket.length > 0 ? \"/checkout\" : \"/order\"}\r\n            className=\"order__total-checkout-button-link\">\r\n            <button\r\n              className=\"order__total-checkout-button\"\r\n              onClick={checkoutClick}>\r\n              Checkout\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderTotal;\r\n","import React from \"react\";\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons,\r\n  FUNDING,\r\n} from \"@paypal/react-paypal-js\";\r\n// import Loading from \"../../Global/Loading\";\r\n\r\n// const initialOptions = {\r\n//   \"client-id\":\r\n//     \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n//   \"merchant-id\": \"UGUFDKZNBH2TN\",\r\n//   \"buyer-country\": \"DE\",\r\n//   currency: \"EURO\",\r\n//   locale: \"de_DE\",\r\n// };\r\n\r\nconst Paypal = ({ onSuccess, onCancel, onError, total, loading, setError }) => {\r\n  // const [{ isPending, isResolved }] = usePayPalScriptReducer();\r\n  return (\r\n    <PayPalScriptProvider\r\n      deferLoading={loading}\r\n      options={{\r\n        \"client-id\":\r\n          \"ATSNzle97H2HdLUL3GMnS5I8PuKouWyteOOCVNR-3UqTW5N_0tFs3ddtDitE1IfqAlRXI4hbaEo2yDT9\",\r\n        // \"client-id\":\r\n        //   \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n        \"merchant-id\": \"92V8XPRZFHZRE\",\r\n        // // \"buyer-country\": \"IT\",\r\n        // // locale: \"de_DE\",\r\n        // locale: \"en_US\",\r\n        locale: \"it_IT\",\r\n        intent: \"capture\",\r\n        currency: \"EUR\",\r\n      }}>\r\n      <PayPalButtons\r\n        fundingSource={FUNDING.PAYPAL}\r\n        // style={{ layout: \"horizontal\" }}\r\n        // createBillingAgreement={(data) =>\r\n        //   console.log(\"create Billing agreement: \", data)\r\n        // }\r\n        // onApprove={(data) => console.log(\"onApprove: \", data)}\r\n        onApprove={onSuccess}\r\n        onError={onError}\r\n        onCancel={onCancel}\r\n        // onError={(err) => console.log(\"error occured: \", err)}\r\n        // onInit={(data) => console.log(\"on init: \", data)}\r\n        createOrder={(data, actions) => {\r\n          console.log(\"data: \", data);\r\n          if (total !== 0)\r\n            return actions.order.create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    value: total,\r\n                  },\r\n                },\r\n              ],\r\n            });\r\n        }}\r\n        style={{\r\n          layout: \"horizontal\",\r\n          label: \"checkout\",\r\n          height: 40,\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default Paypal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Pay.css\";\r\nimport Paypal from \"./Paypal/Paypal\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport OrderTotal from \"./../Global/OrderTotal\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport Footer from \"../Home/Sections/Footer\";\r\n\r\nconst Pay = () => {\r\n  const navigate = useNavigate();\r\n  const state = useStateValue();\r\n  const { userAPI, token } = useStateValue();\r\n  const { email, lastName, name, phone } = userAPI;\r\n  const { userID } = userAPI;\r\n  const [basket, setBasket] = state?.basket;\r\n  const [postalCode] = userAPI?.postalCode;\r\n  const [address] = userAPI?.address;\r\n  const [building] = userAPI?.building;\r\n  const [checkPhone] = userAPI?.checkPhone;\r\n  const [checkEmail] = userAPI?.checkEmail;\r\n  const [checkName] = userAPI?.checkName;\r\n  const [data] = userAPI.postalData;\r\n  const [paymentOption] = userAPI.paymentOption;\r\n  const [deliveryOption] = userAPI.deliveryOption;\r\n  const [takeaway] = userAPI.takeaway\r\n  const [error, setError] = useState(\"\");\r\n  const [deferLoading, setDeferLoading] = useState(true);\r\n  const [totalWithDelivery, setTotalWithDelivery] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTotalWithDelivery(\r\n      parseFloat(getBasketTotal(basket)) + parseFloat(data?.deliveryPrice)\r\n    );\r\n  }, [basket, data?.deliveryPrice]);\r\n\r\n  const transactionSuccess = async (paymentData) => {\r\n    console.log(\"payment data: \", paymentData);\r\n\r\n    const time = Date.now() + 1983;\r\n    try {\r\n      await axios\r\n        .post(\r\n          \"/api/user/createorder\",\r\n          {\r\n            orders: {\r\n              orderNumber: time,\r\n              userID,\r\n              postalCode,\r\n              address,\r\n              paymentID: paymentData.orderID,\r\n              building,\r\n              basket,\r\n              name: name ? name : checkName,\r\n              email: email ? email : checkEmail,\r\n              lastName,\r\n              phone: phone ? phone : checkPhone,\r\n              time,\r\n              total: getBasketTotal(basket),\r\n              deliveryCharges: data?.deliveryPrice,\r\n              deliveryOption,\r\n              paymentOption,\r\n              paymentStatus: \"received\",\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${ token[0] }`,\r\n            },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setBasket([]);\r\n          navigate(`/checkout/ordersuccess/${ time }`);\r\n        });\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const transactionSuccessTakeaway = async (paymentData) => {\r\n    console.log(\"payment data: \", paymentData);\r\n\r\n    const time = Date.now() + 1983;\r\n    try {\r\n      await axios\r\n        .post(\r\n          \"/api/user/createorder\",\r\n          {\r\n            orders: {\r\n              orderNumber: time,\r\n              userID,\r\n              paymentID: paymentData.orderID,\r\n              basket,\r\n              name: name ? name : checkName,\r\n              email: email ? email : checkEmail,\r\n              lastName,\r\n              phone: phone ? phone : checkPhone,\r\n              time,\r\n              total: getBasketTotal(basket),\r\n              deliveryOption,\r\n              paymentOption,\r\n              paymentStatus: \"received\",\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${ token[0] }`,\r\n            },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setBasket([]);\r\n          navigate(`/checkout/ordersuccess/${ time }`);\r\n        });\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const orderSubmit = async () => {\r\n    const time = Date.now() + 1983;\r\n    try {\r\n      await axios\r\n        .post(\r\n          \"/api/user/createorder\",\r\n          {\r\n            orders: {\r\n              orderNumber: time,\r\n              userID,\r\n              postalCode,\r\n              address,\r\n              building,\r\n              basket,\r\n              name: name ? name : checkName,\r\n              email: email ? email : checkEmail,\r\n              lastName,\r\n              phone: phone ? phone : checkPhone,\r\n              time,\r\n              total: getBasketTotal(basket),\r\n              deliveryCharges: data?.deliveryPrice,\r\n              deliveryOption,\r\n              paymentOption,\r\n              paymentStatus: \"pending\",\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${ token[0] }`,\r\n            },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setBasket([]);\r\n          navigate(`/checkout/ordersuccess/${ time }`);\r\n        });\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const orderSubmitTakeaway = async () => {\r\n    const time = Date.now() + 1983;\r\n    try {\r\n      await axios\r\n        .post(\r\n          \"/api/user/createorder\",\r\n          {\r\n            orders: {\r\n              orderNumber: time,\r\n              userID,\r\n              basket,\r\n              name: name ? name : checkName,\r\n              email: email ? email : checkEmail,\r\n              lastName,\r\n              phone: phone ? phone : checkPhone,\r\n              time,\r\n              total: getBasketTotal(basket),\r\n              deliveryOption,\r\n              paymentOption,\r\n              paymentStatus: \"pending\",\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${ token[0] }`,\r\n            },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setBasket([]);\r\n          navigate(`/checkout/ordersuccess/${ time }`);\r\n        });\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const transactionError = async () => {\r\n    setError(\"Transaction not successful\");\r\n  };\r\n\r\n  const transactionCancel = async (data) => {\r\n    setError(\"Cancelled Transaction\");\r\n  };\r\n  useEffect(() => {\r\n    if (\r\n      !postalCode ||\r\n      !address ||\r\n      !building ||\r\n      !checkName ||\r\n      !checkEmail ||\r\n      !checkPhone ||\r\n      parseFloat(getBasketTotal(basket))?.toFixed(2) <\r\n      parseFloat(data?.minOrder) ||\r\n      basket.length === 0 ||\r\n      !data\r\n    ) {\r\n      setDeferLoading(true);\r\n    }\r\n    if (\r\n      (postalCode &&\r\n        address &&\r\n        building &&\r\n        checkName &&\r\n        checkEmail &&\r\n        checkPhone &&\r\n        parseFloat(getBasketTotal(basket))?.toFixed(2) >=\r\n        parseInt(data?.minOrder) &&\r\n        basket.length > 0 &&\r\n        data) ||\r\n      (takeaway && checkEmail && checkName && checkPhone)\r\n    ) {\r\n      setDeferLoading(false);\r\n    }\r\n\r\n  }, [building, basket, address, deferLoading, checkName, checkEmail, checkPhone, data?.minOrder, takeaway, postalCode, data]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     !postalCode ||\r\n  //     !address ||\r\n  //     !building ||\r\n  //     !checkName ||\r\n  //     !checkEmail ||\r\n  //     !checkPhone ||\r\n  //     parseFloat(getBasketTotal(basket))?.toFixed(2) <\r\n  //     parseFloat(deliveryOption === \"takeaway\" ? \"10\" : data?.minOrder) ||\r\n  //     basket.length === 0\r\n  //   ) {\r\n  //     setDeferLoading(true);\r\n  //   }\r\n  //   if (\r\n  //     postalCode &&\r\n  //     address &&\r\n  //     building &&\r\n  //     checkName &&\r\n  //     checkEmail &&\r\n  //     checkPhone &&\r\n  //     parseFloat(getBasketTotal(basket))?.toFixed(2) >=\r\n  //     parseInt(deliveryOption === \"takeaway\" ? \"10\" : data?.minOrder) &&\r\n  //     basket.length > 0\r\n  //   ) {\r\n  //     setDeferLoading(false);\r\n  //   }\r\n  //   if (basket?.length === 0) setError(\"No items in the cart\");\r\n  // }, [\r\n  //   building,\r\n  //   postalCode,\r\n  //   basket,\r\n  //   address,\r\n  //   deferLoading,\r\n  //   checkName,\r\n  //   checkEmail,\r\n  //   checkPhone,\r\n  //   data?.minOrder,\r\n  //   deliveryOption,\r\n  // ]);\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"paymentOptions\">\r\n        {error && <div className=\"error__box\">{error}</div>}\r\n        <OrderTotal />\r\n\r\n        <div className=\"paymentOptions-Paypal-btn\">\r\n          {paymentOption === \"paypaldelivery\" ? (\r\n            <>\r\n              <button\r\n                onClick={(e) =>\r\n                  deliveryOption === \"homedelivery\"\r\n                    ? transactionSuccess(\r\n                      { orderID: \"something now\" },\r\n                      e\r\n                    )\r\n                    : deliveryOption === \"takeaway\" &&\r\n                    transactionSuccessTakeaway(\r\n                      { orderID: \"something now\" },\r\n                      e\r\n                    )\r\n                }\r\n                style={{ padding: \"10px 15px\", margin: \"10px\" }}>\r\n                Pay the bill\r\n              </button>\r\n              <Paypal\r\n                total={\r\n                  deliveryOption === \"takeaway\"\r\n                    ? getBasketTotal(basket)\r\n                    : totalWithDelivery\r\n                }\r\n                onSuccess={\r\n                  deliveryOption === \"homedelivery\"\r\n                    ? transactionSuccess\r\n                    : deliveryOption === \"takeaway\" &&\r\n                    transactionSuccessTakeaway\r\n                }\r\n                onCancel={transactionCancel}\r\n                onError={transactionError}\r\n                setError={setError}\r\n                loading={deferLoading}\r\n              />\r\n            </>\r\n          ) : (\r\n            paymentOption === \"cashondelivery\" && (\r\n              <button\r\n                className=\"paymentOptions-confirmOrder-btn\"\r\n                onClick={\r\n                  deliveryOption === \"homedelivery\"\r\n                    ? orderSubmit\r\n                    : orderSubmitTakeaway\r\n                }>\r\n                Confirm Order\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pay;\r\n"],"sourceRoot":""}