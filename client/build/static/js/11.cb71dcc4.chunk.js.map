{"version":3,"sources":["reducer.js","Components/Screens/Global/OrderTotal.jsx","Components/Screens/Checkout/Paypal/Paypal.jsx","Components/Screens/Checkout/Pay.jsx"],"names":["getBasketTotal","basket","reduce","amount","item","price","quantity","OrderTotal","navigate","useNavigate","state","useStateValue","setBasket","useState","error","setError","userAPI","data","postalData","deliveryOption","setTimeout","className","length","style","color","fontSize","map","i","title","parseFloat","deliveryPrice","toFixed","onClick","to","Paypal","onSuccess","onCancel","onError","total","loading","deferLoading","options","locale","intent","currency","fundingSource","FUNDING","PAYPAL","onApprove","createOrder","actions","console","log","order","create","purchase_units","value","layout","label","height","Pay","token","email","lastName","name","phone","userID","postalCode","address","building","checkPhone","checkEmail","checkName","paymentOption","setDeferLoading","totalWithDelivery","setTotalWithDelivery","useEffect","transactionSuccess","paymentData","a","time","Date","now","axios","post","orders","orderNumber","paymentID","orderID","deliveryCharges","paymentStatus","headers","Authorization","then","response","transactionSuccessTakeaway","transactionError","transactionCancel","minOrder","parseInt","e","padding","margin","Footer"],"mappings":"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","file":"static/js/11.cb71dcc4.chunk.js","sourcesContent":["export const getBasketTotal = (basket) => {\r\n  return basket?.reduce(\r\n    (amount, item) => item.price * item.quantity + amount,\r\n    0\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./OrderTotal.css\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport ShoppingBasketRoundedIcon from \"@mui/icons-material/ShoppingBasketRounded\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst OrderTotal = () => {\r\n  const navigate = useNavigate();\r\n  const state = useStateValue();\r\n  const [basket, setBasket] = state.basket;\r\n  const [error, setError] = useState(null);\r\n  const { userAPI } = useStateValue();\r\n  const [data] = userAPI.postalData\r\n  const [deliveryOption] = userAPI.deliveryOption\r\n\r\n\r\n  const emptyBasket = () => {\r\n    setBasket([]);\r\n  };\r\n\r\n  const checkoutClick = () => {\r\n    if (basket.length > 0) {\r\n      navigate(\"/checkout\");\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"order__right-section\">\r\n      <div className=\"order__right-section-content\">\r\n        <h2 className=\"orderTotal__title\">\r\n          {basket?.length} items in Cart\r\n          <ShoppingBasketRoundedIcon\r\n            style={{ color: \"#d70f64\", fontSize: \"xx-large\" }}\r\n          />\r\n        </h2>\r\n        {basket?.map((item, i) => (\r\n          <div key={i} className=\"order__total-list\">\r\n            <p className=\"order__total-title\">{item?.title}</p>\r\n            <p className=\"order__total-price\">\r\n              <span className=\"order__total-list-text\">x{item?.quantity}</span>\r\n              {item?.price}\r\n            </p>\r\n          </div>\r\n        ))}\r\n        {/* <div className=\"order__total-list\" >\r\n          <p className=\"order__total-title\" style={{ fontSize: 'small' }}>Delivery Fee</p>\r\n          <p className=\"order__total-price\" style={{ justifyContent: 'right', fontSize: 'large' }}>\r\n            {data?.deliveryPrice}\r\n          </p>\r\n        </div> */}\r\n        <h3 className=\"order__total\">\r\n          <span> Total </span>\r\n          {parseFloat(getBasketTotal(basket))}\r\n        </h3>\r\n        {data?.deliveryPrice ? <h4 className='order__total-fee-text' >with delivery fee <span>\r\n          {(parseFloat(getBasketTotal(basket)) + parseFloat(data?.deliveryPrice)).toFixed(2)}\r\n        </span>\r\n        </h4> : <h4>Enter Postal Info</h4>}\r\n        <div className=\"order__total-btns\">\r\n          <button className=\"order__total-empty-button\" onClick={emptyBasket}>\r\n            Empty Cart\r\n          </button>\r\n          <Link\r\n            to={basket.length > 0 ? \"/checkout\" : \"/order\"}\r\n            className=\"order__total-checkout-button-link\">\r\n            <button\r\n              className=\"order__total-checkout-button\"\r\n              onClick={checkoutClick}>\r\n              Checkout\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderTotal;\r\n","import React from \"react\";\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons,\r\n  FUNDING,\r\n} from \"@paypal/react-paypal-js\";\r\n// import Loading from \"../../Global/Loading\";\r\n\r\n// const initialOptions = {\r\n//   \"client-id\":\r\n//     \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n//   \"merchant-id\": \"UGUFDKZNBH2TN\",\r\n//   \"buyer-country\": \"DE\",\r\n//   currency: \"EURO\",\r\n//   locale: \"de_DE\",\r\n// };\r\n\r\nconst Paypal = ({ onSuccess, onCancel, onError, total, loading, setError }) => {\r\n  // const [{ isPending, isResolved }] = usePayPalScriptReducer();\r\n  return (\r\n    <PayPalScriptProvider\r\n      deferLoading={loading}\r\n      options={{\r\n        \"client-id\":\r\n          \"ATSNzle97H2HdLUL3GMnS5I8PuKouWyteOOCVNR-3UqTW5N_0tFs3ddtDitE1IfqAlRXI4hbaEo2yDT9\",\r\n        // \"client-id\":\r\n        //   \"Ac8o4swJtckfwVOCnGLmPeW4KuApWFOLBx4LLW8TcnUD7t5AkSBU6i1yeuPK822ps6QJt-5gL9swQsWI\",\r\n        \"merchant-id\": \"92V8XPRZFHZRE\",\r\n        // // \"buyer-country\": \"IT\",\r\n        // // locale: \"de_DE\",\r\n        // locale: \"en_US\",\r\n        locale: \"it_IT\",\r\n        intent: \"capture\",\r\n        currency: \"EUR\",\r\n      }}>\r\n      <PayPalButtons\r\n        fundingSource={FUNDING.PAYPAL}\r\n        // style={{ layout: \"horizontal\" }}\r\n        // createBillingAgreement={(data) =>\r\n        //   console.log(\"create Billing agreement: \", data)\r\n        // }\r\n        // onApprove={(data) => console.log(\"onApprove: \", data)}\r\n        onApprove={onSuccess}\r\n        onError={onError}\r\n        onCancel={onCancel}\r\n        // onError={(err) => console.log(\"error occured: \", err)}\r\n        // onInit={(data) => console.log(\"on init: \", data)}\r\n        createOrder={(data, actions) => {\r\n          console.log(\"data: \", data);\r\n          if (total !== 0)\r\n            return actions.order.create({\r\n              purchase_units: [\r\n                {\r\n                  amount: {\r\n                    value: total,\r\n                  },\r\n                },\r\n              ],\r\n            });\r\n        }}\r\n        style={{\r\n          layout: \"horizontal\",\r\n          label: \"checkout\",\r\n          height: 40,\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default Paypal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Pay.css\";\r\nimport Paypal from \"./Paypal/Paypal\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport OrderTotal from \"./../Global/OrderTotal\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport { getBasketTotal } from \"../../../reducer\";\r\nimport Footer from \"../Home/Sections/Footer\";\r\n\r\nconst Pay = () => {\r\n  const navigate = useNavigate()\r\n  const state = useStateValue();\r\n  const { userAPI, token } = useStateValue();\r\n  const { email, lastName, name, phone } = userAPI;\r\n  const { userID } = userAPI;\r\n  const [basket, setBasket] = state?.basket;\r\n  const [postalCode] = userAPI?.postalCode;\r\n  const [address] = userAPI?.address;\r\n  const [building] = userAPI?.building;\r\n  const [checkPhone] = userAPI?.checkPhone;\r\n  const [checkEmail] = userAPI?.checkEmail;\r\n  const [checkName] = userAPI?.checkName;\r\n  const [data] = userAPI.postalData\r\n  const [paymentOption] = userAPI.paymentOption\r\n  const [deliveryOption] = userAPI.deliveryOption\r\n  const [error, setError] = useState(\"\");\r\n  const [deferLoading, setDeferLoading] = useState(true);\r\n  const [totalWithDelivery, setTotalWithDelivery] = useState(null)\r\n\r\n  console.log('delivery option: ', deliveryOption)\r\n\r\n\r\n  useEffect(() => {\r\n    setTotalWithDelivery((parseFloat(getBasketTotal(basket)) + parseFloat(data?.deliveryPrice)))\r\n  }, [basket, data?.deliveryPrice])\r\n\r\n  const transactionSuccess = async (paymentData) => {\r\n    const time = Date.now() + 1983;\r\n    try {\r\n\r\n      await axios\r\n        .post(\r\n          \"/api/user/createorder\",\r\n          {\r\n            orders: {\r\n              orderNumber: time,\r\n              userID,\r\n              postalCode,\r\n              address,\r\n              paymentID: paymentData.orderID,\r\n              building,\r\n              basket,\r\n              name: name ? name : checkName,\r\n              email: email ? email : checkEmail,\r\n              lastName,\r\n              phone: phone ? phone : checkPhone,\r\n              time, total: getBasketTotal(basket),\r\n              deliveryCharges: data?.deliveryPrice, deliveryOption, paymentOption, paymentStatus: 'received'\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${ token[0] }`,\r\n            },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setBasket([]);\r\n          navigate(`/checkout/ordersuccess/${ time }`)\r\n        });\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const transactionSuccessTakeaway = async (paymentData) => {\r\n\r\n    const time = Date.now() + 1983;\r\n    try {\r\n\r\n      await axios\r\n        .post(\r\n          \"/api/user/createorder\",\r\n          {\r\n            orders: {\r\n              orderNumber: time,\r\n              userID,\r\n              paymentID: paymentData.orderID,\r\n              basket,\r\n              name: name ? name : checkName,\r\n              email: email ? email : checkEmail,\r\n              lastName,\r\n              phone: phone ? phone : checkPhone,\r\n              time, total: getBasketTotal(basket),\r\n              deliveryOption, paymentOption, paymentStatus: 'received'\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${ token[0] }`,\r\n            },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setBasket([]);\r\n          navigate(`/checkout/ordersuccess/${ time }`)\r\n        });\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n    }\r\n  }\r\n\r\n  const transactionError = async () => {\r\n    setError(\"Transaction not successful\");\r\n  };\r\n\r\n  const transactionCancel = async (data) => {\r\n    setError(\"Cancelled Transaction\");\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !postalCode ||\r\n      !address ||\r\n      !building ||\r\n      !checkName ||\r\n      !checkEmail ||\r\n      !checkPhone || parseFloat(getBasketTotal(basket))?.toFixed(2) < parseFloat(deliveryOption === 'takeaway' ? '10' : data?.minOrder) ||\r\n      basket.length === 0\r\n    ) {\r\n      setDeferLoading(true);\r\n    }\r\n    if (\r\n      postalCode &&\r\n      address &&\r\n      building &&\r\n      checkName &&\r\n      checkEmail &&\r\n      checkPhone &&\r\n      parseFloat(getBasketTotal(basket))?.toFixed(2) >= parseInt(deliveryOption === 'takeaway' ? '10' : data?.minOrder) &&\r\n      basket.length > 0\r\n    ) {\r\n      setDeferLoading(false);\r\n    }\r\n    if (basket?.length === 0) setError(\"No items in the cart\");\r\n  }, [building, postalCode, basket, address, deferLoading, checkName, checkEmail, checkPhone, data?.minOrder, deliveryOption]);\r\n\r\n\r\n  if (error) {\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"paymentOptions\">\r\n        {error && <div className=\"error__box\">{error}</div>}\r\n        <OrderTotal />\r\n\r\n        <div className=\"paymentOptions-Paypal-btn\">\r\n          <button\r\n            onClick={(e) => transactionSuccess({ orderID: \"something now\" }, e)}\r\n            style={{ padding: \"10px 15px\", margin: \"10px\" }}>\r\n            Pay the bill\r\n          </button>\r\n          <Paypal\r\n            total={deliveryOption === 'takeaway' ? getBasketTotal(basket) : totalWithDelivery}\r\n            onSuccess={deliveryOption === 'homedelivery' ? transactionSuccess : transactionSuccessTakeaway}\r\n            onCancel={transactionCancel}\r\n            onError={transactionError}\r\n            setError={setError}\r\n            loading={deferLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pay;\r\n"],"sourceRoot":""}