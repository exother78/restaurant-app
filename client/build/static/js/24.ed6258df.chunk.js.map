{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@paypal/react-paypal-js/dist/esm/react-paypal-js.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","SCRIPT_LOADING_STATE","DISPATCH_ACTION","SCRIPT_ID","DATA_SDK_INTEGRATION_SOURCE","DATA_SDK_INTEGRATION_SOURCE_VALUE","DEFAULT_PAYPAL_NAMESPACE","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","pack","ar","l","slice","concat","getPayPalWindowNamespace$1","namespace","window","getScriptID","options","str","hash","total","charCodeAt","String","fromCharCode","Math","abs","hashStr","JSON","stringify","scriptReducer","state","action","_a","type","LOADING_STATUS","loadingStatus","value","RESET_OPTIONS","reactPayPalScriptID","scriptNode","self","document","querySelector","parentNode","removeChild","destroySDKScript","PENDING","SET_BRAINTREE_INSTANCE","braintreePayPalCheckoutInstance","ScriptContext","createContext","contextNotEmptyValidator","scriptContext","dispatch","Error","usePayPalScriptReducer","useContext","isInitial","INITIAL","isPending","isResolved","RESOLVED","isRejected","REJECTED","PayPalButtons","_b","className","_c","disabled","_d","children","_e","forceReRender","buttonProps","buttonsContainerRef","useRef","buttons","_f","_g","useState","initActions","setInitActions","_h","isEligible","setIsEligible","setErrorState","closeButtonsComponent","current","close","catch","useEffect","paypalWindowNamespace","undefined","Buttons","components","errorMessage","includes","getErrorMessage$2","onInit","data","actions","err","render","fundingSource","disable","enable","isDisabledStyle","opacity","classNames","trim","React","createElement","ref","style","processOptions","sdkBaseURL","processedMerchantIDAttributes","merchantID","dataMerchantID","newMerchantID","newDataMerchantID","toString","processMerchantID","newOptions","keys","filter","key","reduce","accumulator","substring","dataAttributes","queryParams","url","objectToQueryString","params","queryString","forEach","createScriptElement","attributes","newScript","src","setAttribute","loadScript","PromisePonyfill","getDefaultPromiseImplementation","validateArguments","resolve","existingWindowNamespace","getPayPalWindowNamespace","currentScript","nextScript","currentScriptDataset","dataset","uidAuto","isExactMatch","findScript","loadCustomScript","then","newWindowNamespace","reject","onSuccess","onError","onerror","onload","head","insertBefore","firstElementChild","insertScriptElement","Promise","PayPalScriptProvider","deferLoading","useReducer","isSubscribed","Provider","FUNDING","PAYPAL","VENMO","APPLEPAY","ITAU","CREDIT","PAYLATER","CARD","IDEAL","SEPA","BANCONTACT","GIROPAY","SOFORT","EPS","MYBANK","P24","VERKKOPANKKI","PAYU","BLIK","TRUSTLY","ZIMPLER","MAXIMA","OXXO","BOLETO","WECHATPAY","MERCADOPAGO"],"mappings":"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","file":"static/js/24.ed6258df.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*!\n * react-paypal-js v7.3.3 (2021-08-31T21:55:23.426Z)\n * Copyright 2020-present, PayPal, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { createContext, useContext, useRef, useState, useEffect, useReducer } from 'react';\nvar SCRIPT_LOADING_STATE;\n\n(function (SCRIPT_LOADING_STATE) {\n  SCRIPT_LOADING_STATE[\"INITIAL\"] = \"initial\";\n  SCRIPT_LOADING_STATE[\"PENDING\"] = \"pending\";\n  SCRIPT_LOADING_STATE[\"REJECTED\"] = \"rejected\";\n  SCRIPT_LOADING_STATE[\"RESOLVED\"] = \"resolved\";\n})(SCRIPT_LOADING_STATE || (SCRIPT_LOADING_STATE = {}));\n\nvar DISPATCH_ACTION;\n\n(function (DISPATCH_ACTION) {\n  DISPATCH_ACTION[\"LOADING_STATUS\"] = \"setLoadingStatus\";\n  DISPATCH_ACTION[\"RESET_OPTIONS\"] = \"resetOptions\";\n  DISPATCH_ACTION[\"SET_BRAINTREE_INSTANCE\"] = \"braintreeInstance\";\n})(DISPATCH_ACTION || (DISPATCH_ACTION = {})); // Common reference to the script identifier\n\n\nvar SCRIPT_ID = \"data-react-paypal-script-id\";\nvar DATA_CLIENT_TOKEN = \"data-client-token\";\nvar DATA_SDK_INTEGRATION_SOURCE = \"data-sdk-integration-source\";\nvar DATA_SDK_INTEGRATION_SOURCE_VALUE = \"react-paypal-js\";\nvar EMPTY_PROVIDER_CONTEXT_ERROR_MESSAGE = \"usePayPalScriptReducer must be used within a PayPalScriptProvider\";\nvar EMPTY_PROVIDER_CONTEXT_CLIENT_TOKEN_ERROR_MESSAGE = \"A client token wasn't found in the provider parent component\";\nvar braintreeVersion = \"3.81.0\";\nvar BRAINTREE_SOURCE = \"https://js.braintreegateway.com/web/\" + braintreeVersion + \"/js/client.min.js\";\nvar BRAINTREE_PAYPAL_CHECKOUT_SOURCE = \"https://js.braintreegateway.com/web/\" + braintreeVersion + \"/js/paypal-checkout.min.js\"; // Namespaces\n\nvar DEFAULT_PAYPAL_NAMESPACE = \"paypal\";\nvar DEFAULT_BRAINTREE_NAMESPACE = \"braintree\";\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || from);\n}\n/**\n * Get the namespace from the window in the browser\n * this is useful to get the paypal object from window\n * after load PayPal SDK script\n *\n * @param namespace the name space to return\n * @returns the namespace if exists or undefined otherwise\n */\n\n\nfunction getPayPalWindowNamespace$1(namespace) {\n  if (namespace === void 0) {\n    namespace = DEFAULT_PAYPAL_NAMESPACE;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  return window[namespace];\n}\n/**\n * Get a namespace from the window in the browser\n * this is useful to get the braintree from window\n * after load Braintree script\n *\n * @param namespace the name space to return\n * @returns the namespace if exists or undefined otherwise\n */\n\n\nfunction getBraintreeWindowNamespace(namespace) {\n  if (namespace === void 0) {\n    namespace = DEFAULT_BRAINTREE_NAMESPACE;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  return window[namespace];\n}\n/**\n * Creates a string hash code based on the string argument\n *\n * @param str the source input string to hash\n * @returns string hash code\n */\n\n\nfunction hashStr(str) {\n  var hash = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    var total = str[i].charCodeAt(0) * i;\n\n    if (str[i + 1]) {\n      total += str[i + 1].charCodeAt(0) * (i - 1);\n    }\n\n    hash += String.fromCharCode(97 + Math.abs(total) % 26);\n  }\n\n  return hash;\n}\n/**\n * Generate a new random identifier for react-paypal-js\n *\n * @returns the {@code string} containing the random library name\n */\n\n\nfunction getScriptID(options) {\n  return \"react-paypal-js-\" + hashStr(JSON.stringify(options));\n}\n/**\n * Destroy the PayPal SDK from the document page\n *\n * @param reactPayPalScriptID the script identifier\n */\n\n\nfunction destroySDKScript(reactPayPalScriptID) {\n  var scriptNode = self.document.querySelector(\"script[\" + SCRIPT_ID + \"=\\\"\" + reactPayPalScriptID + \"\\\"]\");\n  if (scriptNode != null && scriptNode.parentNode) scriptNode.parentNode.removeChild(scriptNode);\n}\n/**\n * Reducer function to handle complex state changes on the context\n *\n * @param state  the current state on the context object\n * @param action the action to be executed on the previous state\n * @returns a the same state if the action wasn't found, or a new state otherwise\n */\n\n\nfunction scriptReducer(state, action) {\n  var _a;\n\n  switch (action.type) {\n    case DISPATCH_ACTION.LOADING_STATUS:\n      return __assign(__assign({}, state), {\n        loadingStatus: action.value\n      });\n\n    case DISPATCH_ACTION.RESET_OPTIONS:\n      // destroy existing script to make sure only one script loads at a time\n      destroySDKScript(state.options[SCRIPT_ID]); // exclude the old data-react-paypal-script-id value from the hash generated by getScriptID()\n\n      delete action.value[SCRIPT_ID];\n      return __assign(__assign({}, state), {\n        loadingStatus: SCRIPT_LOADING_STATE.PENDING,\n        options: __assign(__assign({}, action.value), (_a = {}, _a[SCRIPT_ID] = \"\" + getScriptID(action.value), _a[DATA_SDK_INTEGRATION_SOURCE] = DATA_SDK_INTEGRATION_SOURCE_VALUE, _a))\n      });\n\n    case DISPATCH_ACTION.SET_BRAINTREE_INSTANCE:\n      return __assign(__assign({}, state), {\n        braintreePayPalCheckoutInstance: action.value\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n} // Create the React context to use in the script provider component\n\n\nvar ScriptContext = createContext(null);\n/**\n * Check if the context is valid and ready to dispatch actions.\n *\n * @param scriptContext the result of connecting to the context provider\n * @returns strict context avoiding null values in the type\n */\n\nfunction contextNotEmptyValidator(scriptContext) {\n  if (typeof (scriptContext === null || scriptContext === void 0 ? void 0 : scriptContext.dispatch) !== \"function\") {\n    throw new Error(EMPTY_PROVIDER_CONTEXT_ERROR_MESSAGE);\n  }\n\n  return scriptContext;\n}\n/**\n * Check if the data-client-token is set in the options of the context\n * This is required to create a Braintree client\n *\n * @param scriptContext the result of connecting to the context provider\n * @returns strict context avoiding null values in the type and client token\n */\n\n\nvar contextOptionClientTokenNotEmptyValidator = function (scriptContext) {\n  var _a;\n\n  if (!((_a = scriptContext === null || scriptContext === void 0 ? void 0 : scriptContext.options) === null || _a === void 0 ? void 0 : _a[DATA_CLIENT_TOKEN])) {\n    throw new Error(EMPTY_PROVIDER_CONTEXT_CLIENT_TOKEN_ERROR_MESSAGE);\n  }\n\n  return scriptContext;\n};\n/**\n * Custom hook to get access to the Script context and\n * dispatch actions to modify the state on the {@link ScriptProvider} component\n *\n * @returns a tuple containing the state of the context and\n * a dispatch function to modify the state\n */\n\n\nfunction usePayPalScriptReducer() {\n  var scriptContext = contextNotEmptyValidator(useContext(ScriptContext));\n\n  var derivedStatusContext = __assign(__assign({}, scriptContext), {\n    isInitial: scriptContext.loadingStatus === SCRIPT_LOADING_STATE.INITIAL,\n    isPending: scriptContext.loadingStatus === SCRIPT_LOADING_STATE.PENDING,\n    isResolved: scriptContext.loadingStatus === SCRIPT_LOADING_STATE.RESOLVED,\n    isRejected: scriptContext.loadingStatus === SCRIPT_LOADING_STATE.REJECTED\n  });\n\n  return [derivedStatusContext, scriptContext.dispatch];\n}\n/**\nThis `<PayPalButtons />` component renders the [Smart Payment Buttons](https://developer.paypal.com/docs/business/javascript-sdk/javascript-sdk-reference/#buttons).\nIt relies on the `<PayPalScriptProvider />` parent component for managing state related to loading the JS SDK script.\n\nUse props for customizing your buttons. For example, here's how you would use the `style`, `createOrder`, and `onApprove` options:\n\n```jsx\n    import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\n\n    <PayPalScriptProvider options={{ \"client-id\": \"test\" }}>\n        <PayPalButtons\n            style={{ layout: \"horizontal\" }}\n            createOrder={(data, actions) => {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            amount: {\n                                value: \"2.00\",\n                            },\n                        },\n                    ],\n                });\n            }}\n        />;\n    </PayPalScriptProvider>\n```\n*/\n\n\nvar PayPalButtons = function (_a) {\n  var _b = _a.className,\n      className = _b === void 0 ? \"\" : _b,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      _d = _a.children,\n      children = _d === void 0 ? null : _d,\n      _e = _a.forceReRender,\n      forceReRender = _e === void 0 ? [] : _e,\n      buttonProps = __rest(_a, [\"className\", \"disabled\", \"children\", \"forceReRender\"]);\n\n  var buttonsContainerRef = useRef(null);\n  var buttons = useRef(null);\n  var _f = usePayPalScriptReducer()[0],\n      isResolved = _f.isResolved,\n      options = _f.options;\n\n  var _g = useState(null),\n      initActions = _g[0],\n      setInitActions = _g[1];\n\n  var _h = useState(true),\n      isEligible = _h[0],\n      setIsEligible = _h[1];\n\n  var _j = useState(null),\n      setErrorState = _j[1];\n\n  function closeButtonsComponent() {\n    if (buttons.current !== null) {\n      buttons.current.close().catch(function () {// ignore errors when closing the component\n      });\n    }\n  } // useEffect hook for rendering the buttons\n\n\n  useEffect(function () {\n    // verify the sdk script has successfully loaded\n    if (isResolved === false) {\n      return closeButtonsComponent;\n    }\n\n    var paypalWindowNamespace = getPayPalWindowNamespace$1(options[\"data-namespace\"]); // verify dependency on window object\n\n    if (paypalWindowNamespace === undefined || paypalWindowNamespace.Buttons === undefined) {\n      setErrorState(function () {\n        throw new Error(getErrorMessage$2(options));\n      });\n      return closeButtonsComponent;\n    }\n\n    var decoratedOnInit = function (data, actions) {\n      setInitActions(actions);\n\n      if (typeof buttonProps.onInit === \"function\") {\n        buttonProps.onInit(data, actions);\n      }\n    };\n\n    try {\n      buttons.current = paypalWindowNamespace.Buttons(__assign(__assign({}, buttonProps), {\n        onInit: decoratedOnInit\n      }));\n    } catch (err) {\n      return setErrorState(function () {\n        throw new Error(\"Failed to render <PayPalButtons /> component. Failed to initialize:  \" + err);\n      });\n    } // only render the button when eligible\n\n\n    if (buttons.current.isEligible() === false) {\n      setIsEligible(false);\n      return closeButtonsComponent;\n    }\n\n    if (buttonsContainerRef.current === null) {\n      return closeButtonsComponent;\n    }\n\n    buttons.current.render(buttonsContainerRef.current).catch(function (err) {\n      // component failed to render, possibly because it was closed or destroyed.\n      if (buttonsContainerRef.current === null || buttonsContainerRef.current.children.length === 0) {\n        // paypal buttons container is no longer in the DOM, we can safely ignore the error\n        return;\n      } // paypal buttons container is still in the DOM\n\n\n      setErrorState(function () {\n        throw new Error(\"Failed to render <PayPalButtons /> component. \" + err);\n      });\n    });\n    return closeButtonsComponent; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, __spreadArray(__spreadArray([isResolved], forceReRender), [buttonProps.fundingSource])); // useEffect hook for managing disabled state\n\n  useEffect(function () {\n    if (initActions === null) {\n      return;\n    }\n\n    if (disabled === true) {\n      initActions.disable().catch(function () {// ignore errors when disabling the component\n      });\n    } else {\n      initActions.enable().catch(function () {// ignore errors when enabling the component\n      });\n    }\n  }, [disabled, initActions]);\n  var isDisabledStyle = disabled ? {\n    opacity: 0.38\n  } : {};\n  var classNames = (className + \" \" + (disabled ? \"paypal-buttons-disabled\" : \"\")).trim();\n\n  if (isEligible === false) {\n    return children;\n  }\n\n  return React.createElement(\"div\", {\n    ref: buttonsContainerRef,\n    style: isDisabledStyle,\n    className: classNames\n  });\n};\n\nfunction getErrorMessage$2(_a) {\n  var _b = _a.components,\n      components = _b === void 0 ? \"\" : _b,\n      _c = _a[\"data-namespace\"],\n      dataNamespace = _c === void 0 ? DEFAULT_PAYPAL_NAMESPACE : _c;\n  var errorMessage = \"Unable to render <PayPalButtons /> because window.\" + dataNamespace + \".Buttons is undefined.\"; // the JS SDK includes the Buttons component by default when no 'components' are specified.\n  // The 'buttons' component must be included in the 'components' list when using it with other components.\n\n  if (components.length && !components.includes(\"buttons\")) {\n    var expectedComponents = components + \",buttons\";\n    errorMessage += \"\\nTo fix the issue, add 'buttons' to the list of components passed to the parent PayPalScriptProvider:\" + (\"\\n`<PayPalScriptProvider options={{ components: '\" + expectedComponents + \"'}}>`.\");\n  }\n\n  return errorMessage;\n}\n\nfunction findScript(url, attributes) {\n  var currentScript = document.querySelector(\"script[src=\\\"\" + url + \"\\\"]\");\n  if (currentScript === null) return null;\n  var nextScript = createScriptElement(url, attributes);\n  var currentScriptDataset = Object.assign({}, currentScript.dataset);\n  delete currentScriptDataset.uidAuto;\n\n  if (Object.keys(currentScriptDataset).length !== Object.keys(nextScript.dataset).length) {\n    return null;\n  }\n\n  var isExactMatch = true;\n  Object.keys(currentScriptDataset).forEach(function (key) {\n    if (currentScriptDataset[key] !== nextScript.dataset[key]) {\n      isExactMatch = false;\n    }\n  });\n  return isExactMatch ? currentScript : null;\n}\n\nfunction insertScriptElement(_a) {\n  var url = _a.url,\n      attributes = _a.attributes,\n      onSuccess = _a.onSuccess,\n      onError = _a.onError;\n  var newScript = createScriptElement(url, attributes);\n  newScript.onerror = onError;\n  newScript.onload = onSuccess;\n  document.head.insertBefore(newScript, document.head.firstElementChild);\n}\n\nfunction processOptions(options) {\n  var sdkBaseURL = \"https://www.paypal.com/sdk/js\";\n\n  if (options.sdkBaseURL) {\n    sdkBaseURL = options.sdkBaseURL;\n    delete options.sdkBaseURL;\n  }\n\n  var processedMerchantIDAttributes = processMerchantID(options[\"merchant-id\"], options[\"data-merchant-id\"]);\n  var newOptions = Object.assign({}, options, processedMerchantIDAttributes);\n\n  var _a = Object.keys(newOptions).filter(function (key) {\n    return typeof newOptions[key] !== \"undefined\" && newOptions[key] !== null && newOptions[key] !== \"\";\n  }).reduce(function (accumulator, key) {\n    var value = newOptions[key].toString();\n\n    if (key.substring(0, 5) === \"data-\") {\n      accumulator.dataAttributes[key] = value;\n    } else {\n      accumulator.queryParams[key] = value;\n    }\n\n    return accumulator;\n  }, {\n    queryParams: {},\n    dataAttributes: {}\n  }),\n      queryParams = _a.queryParams,\n      dataAttributes = _a.dataAttributes;\n\n  return {\n    url: sdkBaseURL + \"?\" + objectToQueryString(queryParams),\n    dataAttributes: dataAttributes\n  };\n}\n\nfunction objectToQueryString(params) {\n  var queryString = \"\";\n  Object.keys(params).forEach(function (key) {\n    if (queryString.length !== 0) queryString += \"&\";\n    queryString += key + \"=\" + params[key];\n  });\n  return queryString;\n}\n\nfunction createScriptElement(url, attributes) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var newScript = document.createElement(\"script\");\n  newScript.src = url;\n  Object.keys(attributes).forEach(function (key) {\n    newScript.setAttribute(key, attributes[key]);\n\n    if (key === \"data-csp-nonce\") {\n      newScript.setAttribute(\"nonce\", attributes[\"data-csp-nonce\"]);\n    }\n  });\n  return newScript;\n}\n\nfunction processMerchantID(merchantID, dataMerchantID) {\n  var newMerchantID = \"\";\n  var newDataMerchantID = \"\";\n\n  if (Array.isArray(merchantID)) {\n    if (merchantID.length > 1) {\n      newMerchantID = \"*\";\n      newDataMerchantID = merchantID.toString();\n    } else {\n      newMerchantID = merchantID.toString();\n    }\n  } else if (typeof merchantID === \"string\" && merchantID.length > 0) {\n    newMerchantID = merchantID;\n  } else if (typeof dataMerchantID === \"string\" && dataMerchantID.length > 0) {\n    newMerchantID = \"*\";\n    newDataMerchantID = dataMerchantID;\n  }\n\n  return {\n    \"merchant-id\": newMerchantID,\n    \"data-merchant-id\": newDataMerchantID\n  };\n}\n\nfunction loadScript(options, PromisePonyfill) {\n  if (PromisePonyfill === void 0) {\n    PromisePonyfill = getDefaultPromiseImplementation();\n  }\n\n  validateArguments(options, PromisePonyfill);\n  if (typeof window === \"undefined\") return PromisePonyfill.resolve(null);\n\n  var _a = processOptions(options),\n      url = _a.url,\n      dataAttributes = _a.dataAttributes;\n\n  var namespace = dataAttributes[\"data-namespace\"] || \"paypal\";\n  var existingWindowNamespace = getPayPalWindowNamespace(namespace);\n\n  if (findScript(url, dataAttributes) && existingWindowNamespace) {\n    return PromisePonyfill.resolve(existingWindowNamespace);\n  }\n\n  return loadCustomScript({\n    url: url,\n    attributes: dataAttributes\n  }, PromisePonyfill).then(function () {\n    var newWindowNamespace = getPayPalWindowNamespace(namespace);\n\n    if (newWindowNamespace) {\n      return newWindowNamespace;\n    }\n\n    throw new Error(\"The window.\" + namespace + \" global variable is not available.\");\n  });\n}\n\nfunction loadCustomScript(options, PromisePonyfill) {\n  if (PromisePonyfill === void 0) {\n    PromisePonyfill = getDefaultPromiseImplementation();\n  }\n\n  validateArguments(options, PromisePonyfill);\n  var url = options.url,\n      attributes = options.attributes;\n\n  if (typeof url !== \"string\" || url.length === 0) {\n    throw new Error(\"Invalid url.\");\n  }\n\n  if (typeof attributes !== \"undefined\" && typeof attributes !== \"object\") {\n    throw new Error(\"Expected attributes to be an object.\");\n  }\n\n  return new PromisePonyfill(function (resolve, reject) {\n    if (typeof window === \"undefined\") return resolve();\n    insertScriptElement({\n      url: url,\n      attributes: attributes,\n      onSuccess: function onSuccess() {\n        return resolve();\n      },\n      onError: function onError() {\n        return reject(new Error(\"The script \\\"\" + url + \"\\\" failed to load.\"));\n      }\n    });\n  });\n}\n\nfunction getDefaultPromiseImplementation() {\n  if (typeof Promise === \"undefined\") {\n    throw new Error(\"Promise is undefined. To resolve the issue, use a Promise polyfill.\");\n  }\n\n  return Promise;\n}\n\nfunction getPayPalWindowNamespace(namespace) {\n  return window[namespace];\n}\n\nfunction validateArguments(options, PromisePonyfill) {\n  if (typeof options !== \"object\" || options === null) {\n    throw new Error(\"Expected an options object.\");\n  }\n\n  if (typeof PromisePonyfill !== \"undefined\" && typeof PromisePonyfill !== \"function\") {\n    throw new Error(\"Expected PromisePonyfill to be a function.\");\n  }\n}\n/**\n * Custom hook to get access to the ScriptProvider context\n *\n * @returns the state of the context\n */\n\n\nfunction useBraintreeProviderContext() {\n  var scriptContext = contextOptionClientTokenNotEmptyValidator(contextNotEmptyValidator(useContext(ScriptContext)));\n  return [scriptContext, scriptContext.dispatch];\n}\n/**\n * Override the createOrder callback to send the PayPal checkout instance as argument\n * to the defined createOrder function for braintree component button\n *\n * @param braintreeButtonProps the component button options\n */\n\n\nvar decorateCreateOrder = function (braintreeButtonProps, payPalCheckoutInstance) {\n  if (typeof braintreeButtonProps.createOrder === \"function\") {\n    // Keep the createOrder function reference\n    var functionReference_1 = braintreeButtonProps.createOrder;\n\n    braintreeButtonProps.createOrder = function (data, actions) {\n      return functionReference_1(data, __assign(__assign({}, actions), {\n        braintree: payPalCheckoutInstance\n      }));\n    };\n  }\n};\n/**\n * Override the onApprove callback to send the payload as argument\n * to the defined onApprove function for braintree component button\n *\n * @param braintreeButtonProps the component button options\n */\n\n\nvar decorateOnApprove = function (braintreeButtonProps, payPalCheckoutInstance) {\n  if (typeof braintreeButtonProps.onApprove === \"function\") {\n    // Store the createOrder function reference\n    var braintreeOnApprove_1 = braintreeButtonProps.onApprove;\n\n    braintreeButtonProps.onApprove = function (data, actions) {\n      return braintreeOnApprove_1(data, __assign(__assign({}, actions), {\n        braintree: payPalCheckoutInstance\n      }));\n    };\n  }\n};\n/**\n * Use `actions.braintree` to provide an interface for the paypalCheckoutInstance\n * through the createOrder and onApprove callbacks\n *\n * @param braintreeButtonProps the component button options\n * @returns a new copy of the component button options casted as {@link PayPalButtonsComponentProps}\n */\n\n\nvar decorateActions = function (buttonProps, payPalCheckoutInstance) {\n  decorateCreateOrder(buttonProps, payPalCheckoutInstance);\n  decorateOnApprove(buttonProps, payPalCheckoutInstance);\n  return __assign({}, buttonProps);\n};\n/**\nThis `<BraintreePayPalButtons />` component renders the [Braintree PayPal Buttons](https://developer.paypal.com/braintree/docs/guides/paypal/overview) for Braintree Merchants.\nIt relies on the `<PayPalScriptProvider />` parent component for managing state related to loading the JS SDK script.\n\nUse props for customizing your buttons. For example, here's how you would use the `style`, `createOrder`, and `onApprove` options:\n\n```jsx\n    import { PayPalScriptProvider, BraintreePayPalButtons } from \"@paypal/react-paypal-js\";\n\n    <PayPalScriptProvider options={{ \"client-id\": \"test\" }}>\n        <BraintreePayPalButtons\n            style={{ layout: \"horizontal\" }}\n            createOrder={(data, actions) => {\n                // the paypalCheckoutInstance from the braintree sdk integration is added to `actions.braintree`\n                return actions.braintree.createPayment({\n                    flow: \"checkout\",\n                    amount: \"10.0\",\n                    currency: \"USD\",\n                    intent: \"capture\"\n                })\n            }}\n            onApprove={(data, actions) => {\n                return actions.braintree.tokenizePayment(data)\n                    .then((payload) => {\n                        // call server-side endpoint to finish the sale\n                    })\n            }\n        />;\n    </PayPalScriptProvider>\n```\n\n*/\n\n\nvar BraintreePayPalButtons = function (_a) {\n  var _b = _a.className,\n      className = _b === void 0 ? \"\" : _b,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      _d = _a.children,\n      children = _d === void 0 ? null : _d,\n      _e = _a.forceReRender,\n      forceReRender = _e === void 0 ? [] : _e,\n      buttonProps = __rest(_a, [\"className\", \"disabled\", \"children\", \"forceReRender\"]);\n\n  var _f = useState(null),\n      setErrorState = _f[1];\n\n  var _g = useBraintreeProviderContext(),\n      providerContext = _g[0],\n      dispatch = _g[1];\n\n  useEffect(function () {\n    Promise.all([loadCustomScript({\n      url: BRAINTREE_SOURCE\n    }), loadCustomScript({\n      url: BRAINTREE_PAYPAL_CHECKOUT_SOURCE\n    })]).then(function () {\n      var clientToken = providerContext.options[DATA_CLIENT_TOKEN];\n      var braintreeNamespace = getBraintreeWindowNamespace();\n      return braintreeNamespace.client.create({\n        authorization: clientToken\n      }).then(function (clientInstance) {\n        return braintreeNamespace.paypalCheckout.create({\n          client: clientInstance\n        });\n      }).then(function (paypalCheckoutInstance) {\n        dispatch({\n          type: DISPATCH_ACTION.SET_BRAINTREE_INSTANCE,\n          value: paypalCheckoutInstance\n        });\n      });\n    }).catch(function (err) {\n      setErrorState(function () {\n        throw new Error(\"An error occurred when loading the Braintree scripts: \" + err);\n      });\n    });\n  }, [providerContext.options, dispatch]);\n  return React.createElement(React.Fragment, null, providerContext.braintreePayPalCheckoutInstance && React.createElement(PayPalButtons, __assign({\n    className: className,\n    disabled: disabled,\n    forceReRender: forceReRender\n  }, decorateActions(buttonProps, providerContext.braintreePayPalCheckoutInstance)), children));\n};\n/**\nThe `<PayPalMarks />` component is used for conditionally rendering different payment options using radio buttons.\nThe [Display PayPal Buttons with other Payment Methods guide](https://developer.paypal.com/docs/business/checkout/add-capabilities/buyer-experience/#display-paypal-buttons-with-other-payment-methods) describes this style of integration in detail.\nIt relies on the `<PayPalScriptProvider />` parent component for managing state related to loading the JS SDK script.\n\n```jsx\n    <PayPalMarks />\n```\n\nThis component can also be configured to use a single funding source similar to the [standalone buttons](https://developer.paypal.com/docs/business/checkout/configure-payments/standalone-buttons/) approach.\nA `FUNDING` object is exported by this library which has a key for every available funding source option.\n\n```jsx\n    import { PayPalScriptProvider, PayPalMarks, FUNDING } from \"@paypal/react-paypal-js\";\n\n    <PayPalScriptProvider options={{ \"client-id\": \"test\", components: \"buttons,marks\" }}>\n        <PayPalMarks fundingSource={FUNDING.PAYPAL}/>\n    </PayPalScriptProvider>\n```\n*/\n\n\nvar PayPalMarks = function (_a) {\n  var _b = _a.className,\n      className = _b === void 0 ? \"\" : _b,\n      markProps = __rest(_a, [\"className\"]);\n\n  var _c = usePayPalScriptReducer()[0],\n      isResolved = _c.isResolved,\n      options = _c.options;\n  var markContainerRef = useRef(null);\n  var mark = useRef(null);\n\n  var _d = useState(null),\n      setErrorState = _d[1];\n\n  useEffect(function () {\n    // verify the sdk script has successfully loaded\n    if (isResolved === false) {\n      return;\n    } // don't rerender when already rendered\n\n\n    if (mark.current !== null) {\n      return;\n    }\n\n    var paypalWindowNamespace = getPayPalWindowNamespace$1(options[\"data-namespace\"]); // verify dependency on window object\n\n    if (paypalWindowNamespace === undefined || paypalWindowNamespace.Marks === undefined) {\n      setErrorState(function () {\n        throw new Error(getErrorMessage$1(options));\n      });\n      return;\n    }\n\n    mark.current = paypalWindowNamespace.Marks(__assign({}, markProps)); // only render the mark when eligible\n\n    if (mark.current.isEligible() === false) {\n      return;\n    }\n\n    if (markContainerRef.current === null) {\n      return;\n    }\n\n    mark.current.render(markContainerRef.current).catch(function (err) {\n      // component failed to render, possibly because it was closed or destroyed.\n      if (markContainerRef.current === null || markContainerRef.current.children.length === 0) {\n        // paypal marks container is no longer in the DOM, we can safely ignore the error\n        return;\n      } // paypal marks container is still in the DOM\n\n\n      setErrorState(function () {\n        throw new Error(\"Failed to render <PayPalMarks /> component. \" + err);\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isResolved, markProps.fundingSource]);\n  return React.createElement(\"div\", {\n    ref: markContainerRef,\n    className: className\n  });\n};\n\nfunction getErrorMessage$1(_a) {\n  var _b = _a.components,\n      components = _b === void 0 ? \"\" : _b,\n      _c = _a[\"data-namespace\"],\n      dataNamespace = _c === void 0 ? DEFAULT_PAYPAL_NAMESPACE : _c;\n  var errorMessage = \"Unable to render <PayPalMarks /> because window.\" + dataNamespace + \".Marks is undefined.\"; // the JS SDK does not load the Marks component by default. It must be passed into the \"components\" query parameter.\n\n  if (!components.includes(\"marks\")) {\n    var expectedComponents = components ? components + \",marks\" : \"marks\";\n    errorMessage += \"\\nTo fix the issue, add 'marks' to the list of components passed to the parent PayPalScriptProvider:\" + (\"\\n`<PayPalScriptProvider options={{ components: '\" + expectedComponents + \"'}}>`.\");\n  }\n\n  return errorMessage;\n}\n\nvar PayPalMessages = function (_a) {\n  var _b = _a.className,\n      className = _b === void 0 ? \"\" : _b,\n      _c = _a.forceReRender,\n      forceReRender = _c === void 0 ? [] : _c,\n      messageProps = __rest(_a, [\"className\", \"forceReRender\"]);\n\n  var _d = usePayPalScriptReducer()[0],\n      isResolved = _d.isResolved,\n      options = _d.options;\n  var messagesContainerRef = useRef(null);\n  var messages = useRef(null);\n\n  var _e = useState(null),\n      setErrorState = _e[1];\n\n  useEffect(function () {\n    // verify the sdk script has successfully loaded\n    if (isResolved === false) {\n      return;\n    }\n\n    var paypalWindowNamespace = getPayPalWindowNamespace$1(options[\"data-namespace\"]); // verify dependency on window object\n\n    if (paypalWindowNamespace === undefined || paypalWindowNamespace.Messages === undefined) {\n      setErrorState(function () {\n        throw new Error(getErrorMessage(options));\n      });\n      return;\n    }\n\n    messages.current = paypalWindowNamespace.Messages(__assign({}, messageProps));\n\n    if (messagesContainerRef.current === null) {\n      return;\n    }\n\n    messages.current.render(messagesContainerRef.current).catch(function (err) {\n      // component failed to render, possibly because it was closed or destroyed.\n      if (messagesContainerRef.current === null || messagesContainerRef.current.children.length === 0) {\n        // paypal messages container is no longer in the DOM, we can safely ignore the error\n        return;\n      } // paypal messages container is still in the DOM\n\n\n      setErrorState(function () {\n        throw new Error(\"Failed to render <PayPalMessages /> component. \" + err);\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, __spreadArray([isResolved], forceReRender));\n  return React.createElement(\"div\", {\n    ref: messagesContainerRef,\n    className: className\n  });\n};\n\nfunction getErrorMessage(_a) {\n  var _b = _a.components,\n      components = _b === void 0 ? \"\" : _b,\n      _c = _a[\"data-namespace\"],\n      dataNamespace = _c === void 0 ? DEFAULT_PAYPAL_NAMESPACE : _c;\n  var errorMessage = \"Unable to render <PayPalMessages /> because window.\" + dataNamespace + \".Messages is undefined.\"; // the JS SDK does not load the Messages component by default. It must be passed into the \"components\" query parameter.\n\n  if (!components.includes(\"messages\")) {\n    var expectedComponents = components ? components + \",messages\" : \"messages\";\n    errorMessage += \"\\nTo fix the issue, add 'messages' to the list of components passed to the parent PayPalScriptProvider:\" + (\"\\n`<PayPalScriptProvider options={{ components: '\" + expectedComponents + \"'}}>`.\");\n  }\n\n  return errorMessage;\n}\n\nvar PayPalScriptProvider = function (_a) {\n  var _b;\n\n  var _c = _a.options,\n      options = _c === void 0 ? {\n    \"client-id\": \"test\"\n  } : _c,\n      children = _a.children,\n      _d = _a.deferLoading,\n      deferLoading = _d === void 0 ? false : _d;\n\n  var _e = useReducer(scriptReducer, {\n    options: __assign(__assign({}, options), (_b = {}, _b[SCRIPT_ID] = \"\" + getScriptID(options), _b[DATA_SDK_INTEGRATION_SOURCE] = DATA_SDK_INTEGRATION_SOURCE_VALUE, _b)),\n    loadingStatus: deferLoading ? SCRIPT_LOADING_STATE.INITIAL : SCRIPT_LOADING_STATE.PENDING,\n    dispatch: null\n  }),\n      state = _e[0],\n      dispatch = _e[1];\n\n  useEffect(function () {\n    if (deferLoading === false && state.loadingStatus === SCRIPT_LOADING_STATE.INITIAL) {\n      return dispatch({\n        type: DISPATCH_ACTION.LOADING_STATUS,\n        value: SCRIPT_LOADING_STATE.PENDING\n      });\n    }\n\n    if (state.loadingStatus !== SCRIPT_LOADING_STATE.PENDING) return;\n    var isSubscribed = true;\n    loadScript(state.options).then(function () {\n      if (isSubscribed) {\n        dispatch({\n          type: DISPATCH_ACTION.LOADING_STATUS,\n          value: SCRIPT_LOADING_STATE.RESOLVED\n        });\n      }\n    }).catch(function () {\n      if (isSubscribed) {\n        dispatch({\n          type: DISPATCH_ACTION.LOADING_STATUS,\n          value: SCRIPT_LOADING_STATE.REJECTED\n        });\n      }\n    });\n    return function () {\n      isSubscribed = false;\n    };\n  }, [state.options, deferLoading, state.loadingStatus]);\n  return React.createElement(ScriptContext.Provider, {\n    value: __assign(__assign({}, state), {\n      dispatch: dispatch\n    })\n  }, children);\n};\n\nvar FUNDING$1 = {\n  PAYPAL: 'paypal',\n  VENMO: 'venmo',\n  APPLEPAY: 'applepay',\n  ITAU: 'itau',\n  CREDIT: 'credit',\n  PAYLATER: 'paylater',\n  CARD: 'card',\n  IDEAL: 'ideal',\n  SEPA: 'sepa',\n  BANCONTACT: 'bancontact',\n  GIROPAY: 'giropay',\n  SOFORT: 'sofort',\n  EPS: 'eps',\n  MYBANK: 'mybank',\n  P24: 'p24',\n  VERKKOPANKKI: 'verkkopankki',\n  PAYU: 'payu',\n  BLIK: 'blik',\n  TRUSTLY: 'trustly',\n  ZIMPLER: 'zimpler',\n  MAXIMA: 'maxima',\n  OXXO: 'oxxo',\n  BOLETO: 'boleto',\n  WECHATPAY: 'wechatpay',\n  MERCADOPAGO: 'mercadopago'\n}; // We do not re-export `FUNDING` from the `sdk-constants` module\n// directly because it has no type definitions.\n//\n// See https://github.com/paypal/react-paypal-js/issues/125\n\nvar FUNDING = FUNDING$1;\nexport { BraintreePayPalButtons, DISPATCH_ACTION, FUNDING, PayPalButtons, PayPalMarks, PayPalMessages, PayPalScriptProvider, SCRIPT_LOADING_STATE, ScriptContext, destroySDKScript, getScriptID, scriptReducer, usePayPalScriptReducer };\n"],"sourceRoot":""}